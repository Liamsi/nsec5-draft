<?xml version="1.0" encoding="us-ascii"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.0.40 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2136 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC2181 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2181.xml">
<!ENTITY RFC2308 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2308.xml">
<!ENTITY RFC4033 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4033.xml">
<!ENTITY RFC4034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4034.xml">
<!ENTITY RFC4035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4035.xml">
<!ENTITY RFC4648 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4648.xml">
<!ENTITY RFC5114 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5114.xml">
<!ENTITY RFC5155 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5155.xml">
<!ENTITY RFC6234 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6234.xml">
<!ENTITY RFC6605 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6605.xml">
<!ENTITY RFC7748 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7748.xml">
<!ENTITY RFC8080 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8080.xml">
<!ENTITY RFC6781 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6781.xml">
<!ENTITY RFC7129 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7129.xml">
<!ENTITY RFC7719 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7719.xml">
<!ENTITY I-D.gieben-nsec4 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.gieben-nsec4.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc compact="yes"?>
<?rfc rfcedstyle="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

<rfc ipr="trust200902" docName="draft-vcelak-nsec5-05" category="std">

  <front>
    <title abbrev="NSEC5">NSEC5, DNSSEC Authenticated Denial of Existence</title>

    <author initials="J." surname="Vcelak" fullname="Jan Vcelak">
      <organization>CZ.NIC</organization>
      <address>
        <postal>
          <street>Milesovska 1136/5</street>
          <city>Praha</city>
          <code>130 00</code>
          <country>CZ</country>
        </postal>
        <email>jan.vcelak@nic.cz</email>
      </address>
    </author>
    <author initials="S." surname="Goldberg" fullname="Sharon Goldberg">
      <organization>Boston University</organization>
      <address>
        <postal>
          <street>111 Cummington St, MCS135</street>
          <city>Boston</city>
          <region>MA</region>
          <code>02215</code>
          <country>USA</country>
        </postal>
        <email>goldbe@cs.bu.edu</email>
      </address>
    </author>
    <author initials="D." surname="Papadopoulos" fullname="Dimitrios Papadopoulos">
      <organization>University of Maryland</organization>
      <address>
        <postal>
          <street>8223 Paint Branch Dr</street>
          <city>College Park</city>
          <region>MD</region>
          <code>20740</code>
          <country>USA</country>
        </postal>
        <email>dipapado@umd.edu</email>
      </address>
    </author>
    <author initials="S." surname="Huque" fullname="Shumon Huque">
      <organization>Salesforce</organization>
      <address>
        <postal>
          <street>2550 Wasser Terr</street>
          <city>Herndon</city>
          <region>VA</region>
          <code>20171</code>
          <country>USA</country>
        </postal>
        <email>shuque@gmail.com</email>
      </address>
    </author>
    <author initials="D.C." surname="Lawrence" fullname="David C Lawrence">
      <organization>Akamai Technologies</organization>
      <address>
        <postal>
          <street>150 Broadway</street>
          <city>Boston</city>
          <region>MA</region>
          <code>02142-1054</code>
          <country>USA</country>
        </postal>
        <email>tale@akamai.com</email>
      </address>
    </author>

    <date year="2017"/>

    <area>Internet</area>
    <workgroup>Network Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>The Domain Name System Security Extensions (DNSSEC) introduced the
NSEC resource record (RR) for authenticated denial of existence and
the NSEC3 RR for hashed authenticated denial of existence.  This
document introduces NSEC5 as an alternative mechanism for DNSSEC
authenticated denial of existence.  NSEC5 uses verifiable random
functions (VRFs) to prevent offline enumeration of zone
contents. NSEC5 also protects the integrity of the zone contents even
if an adversary compromises one of the authoritative servers for the
zone.  Integrity is preserved because NSEC5 does not require private
zone-signing keys to be present on all authoritative servers for the
zone, in contrast to DNSSEC online signing schemes like NSEC3 White
Lies.</t>



    </abstract>


    <note title="Ed note">


<t>Text inside square brackets ([]) is additional background
information, answers to frequently asked questions, general musings,
etc.  They will be removed before publication.  This document is being
collaborated on in GitHub at
&lt;https://github.com/fcelda/nsec5-draft&gt;.  The most recent version of
the document, open issues, etc should all be available here.  The
authors gratefully accept pull requests.</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<section anchor="rationale" title="Rationale">

<t>NSEC5 provides an alternative mechanism for authenticated denial of
existence for the DNS Security Extensions (DNSSEC). NSEC5 has two key
security properties.  First, NSEC5 protects the integrity of the zone
contents even if an adversary compromises one of the authoritative
servers for the zone.  Second, NSEC5 prevents offline zone
enumeration, where an adversary makes a small number of online DNS
queries and then processes them offline in order to learn all of the
names in a zone. Zone enumeration can be used to identify routers,
servers or other "things" that could then be targeted in more complex
attacks. An enumerated zone can also be a source of probable email
addresses for spam, or as a "key for multiple WHOIS queries to reveal
registrant data that many registries may have legal obligations to
protect" <xref target="RFC5155"/>.</t>

<t>All other DNSSEC mechanisms for authenticated denial of existence
either fail to preserve integrity against a compromised server, or
fail to prevent offline zone enumeration.</t>

<t>When offline signing with NSEC is used <xref target="RFC4034"/>, an NSEC chain of
all existing domain names in the zone is constructed and signed
offline. The chain is made of resource records (RRs), where each RR
represents two consecutive domain names in canonical order present in
the zone.  The authoritative server proves the non-existence of a name
by presenting a signed NSEC RR which covers the name.  Because the
authoritative server does not need not to know the private
zone-signing key, the integrity of the zone is protected even if the
server is compromised.  However, the NSEC chain allows for easy zone
enumeration: N queries to the server suffice to learn all N names in
the zone (see e.g., <xref target="nmap-nsec-enum"/>, <xref target="nsec3map"/>, and
<xref target="ldns-walk"/>).</t>

<t>When offline signing with NSEC3 is used <xref target="RFC5155"/>, the original
names in the NSEC chain are replaced by their cryptographic
hashes. Offline signing ensures that NSEC3 preserves integrity even if
an authoritative server is compromised. However, offline zone
enumeration is still possible with NSEC3 (see e.g., <xref target="nsec3walker"/>,
<xref target="nsec3gpu"/>), and is part of standard network reconnaissance tools
(e.g., <xref target="nmap-nsec3-enum"/>, <xref target="nsec3map"/>).</t>

<t>When online signing is used, the authoritative server holds the
private zone-signing key and uses this key to synthesize NSEC or NSEC3
responses on the fly (e.g.  NSEC3 White Lies (NSEC3-WL) or
Minimally-Covering NSEC, both described in <xref target="RFC7129"/>).  Because the
synthesized response only contains information about the queried name
(but not about any other name in the zone), offline zone enumeration
is not possible.  However, because the authoritative server holds the
private zone-signing key, integrity is lost if the authoritative
server is compromised.</t>

<texttable>
      <ttcol align='left'>Scheme</ttcol>
      <ttcol align='right'>Integrity vs network attacks?</ttcol>
      <ttcol align='right'>Integrity vs compromised auth. server?</ttcol>
      <ttcol align='right'>Prevents offline zone enumeration?</ttcol>
      <ttcol align='right'>Online crypto?</ttcol>
      <c>Unsigned</c>
      <c>NO</c>
      <c>NO</c>
      <c>YES</c>
      <c>NO</c>
      <c>NSEC</c>
      <c>YES</c>
      <c>YES</c>
      <c>NO</c>
      <c>NO</c>
      <c>NSEC3</c>
      <c>YES</c>
      <c>YES</c>
      <c>NO</c>
      <c>NO</c>
      <c>NSEC3-WL</c>
      <c>YES</c>
      <c>NO</c>
      <c>YES</c>
      <c>YES</c>
      <c>NSEC5</c>
      <c>YES</c>
      <c>YES</c>
      <c>YES</c>
      <c>YES</c>
</texttable>

<t>NSEC5 prevents offline zone enumeration and also protects integrity
even if a zone's authoritative server is compromised.  To do this,
NSEC5 replaces the unkeyed cryptographic hash function used in NSEC3
with a verifiable random function (VRF) <xref target="MRV99"/>.  A VRF is the
public-key version of a keyed cryptographic hash.  Only the holder of
the private VRF key can compute the hash, but anyone with public VRF
key can verify the correctness of the hash.</t>

<t>The public VRF key is distributed in an NSEC5KEY RR, similar to a
DNSKEY RR, and is used to verify NSEC5 hash values.  The private VRF
key is present on all authoritative servers for the zone, and is used
to compute hash values. For every query that elicits a negative
response, the authoritative server hashes the query on the fly using
the private VRF key, and also returns the corresponding precomputed
NSEC5 record(s). In contrast to the online signing approach
<xref target="RFC7129"/>, the private key that is present on all authoritative
servers for NSEC5 cannot be used to modify the zone contents.</t>

<t>Like online signing approaches, NSEC5 requires the authoritative
server to perform online public key cryptographic operations for every
query eliciting a denying response.  This is necessary; <xref target="nsec5"/>
proved that online cryptography is required to prevent offline zone
enumeration while still protecting the integrity of zone contents
against network attacks.</t>

<t>NSEC5 is not intended to replace NSEC or NSEC3. It is an alternative
mechanism for authenticated denial of existence.  This document
specifies NSEC5 based on the FIPS 186-3 P-256 elliptic curve and on
the Ed25519 elliptic curve. A formal cryptographic proof of security
for elliptic curve (EC) NSEC5 is in <xref target="nsec5ecc"/>.</t>

</section>
<section anchor="requirements" title="Requirements">

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
document are to be interpreted as described in <xref target="RFC2119"/>.</t>

</section>
<section anchor="terminology" title="Terminology">

<t>The reader is assumed to be familiar with the basic DNS and DNSSEC
concepts described in <xref target="RFC1034"/>, <xref target="RFC1035"/>, <xref target="RFC4033"/>,
<xref target="RFC4034"/>, and <xref target="RFC4035"/>; subsequent RFCs that update them in
<xref target="RFC2136"/>, <xref target="RFC2181"/>, <xref target="RFC2308"/>, <xref target="RFC5155"/>, and <xref target="RFC7129"/>;
and DNS terms in <xref target="RFC7719"/>.</t>

<t>The reader should also be familiar with verifiable random functions (VRFs)
as defined in <xref target="ID.goldbe-vrf"/>.</t>

<t>The following terminology is used through this document:</t>

<t><list style="hanging">
  <t hangText='Base32hex:'>
  The "Base 32 Encoding with Extended Hex Alphabet" as specified
in <xref target="RFC4648"/>. The padding characters ("=") are not
used in the NSEC5 specification.</t>
  <t hangText='Base64:'>
  The "Base 64 Encoding" as specified in <xref target="RFC4648"/>.</t>
  <t hangText='QNAME:'>
  The domain name being queried (query name).</t>
  <t hangText='Private NSEC5 key:'>
  The private key for the verifiable random function (VRF).</t>
  <t hangText='Public NSEC5 key:'>
  The public key for the VRF.</t>
  <t hangText='NSEC5 proof:'>
  A VRF proof. The holder of
the private NSEC5 key (e.g., authoritative server) can
compute the NSEC5 proof for an input domain name.
Anyone who knows the public VRF key can verify
that the NSEC5 proof corresponds to the input domain name.</t>
  <t hangText='NSEC5 hash:'>
  A cryptographic digest of an NSEC5 proof. If the NSEC5
proof is known, anyone can compute its corresponding NSEC5 hash.</t>
  <t hangText='NSEC5 algorithm:'>
  A triple of VRF algorithms that 
  compute an NSEC5 proof (VRF_prove),
  verify an NSEC5 proof (VRF_verify), 
  and process an NSEC5 proof to obtain its NSEC5 hash (VRF_proof2hash).</t>
</list></t>

</section>
</section>
<section anchor="backward-compatibility" title="Backward Compatibility">

<t>The specification describes a protocol change that is not backward
compatible with <xref target="RFC4035"/> and <xref target="RFC5155"/>. An NSEC5-unaware resolver
will fail to validate responses introduced by this document.</t>

<t>To prevent NSEC5-unaware resolvers from attempting to validate the
responses, new DNSSEC algorithms identifiers are introduced in
<xref target="iana_considerations"/> which alias existing algorithm numbers. The
zones signed according to this specification MUST use only these
algorithm identifiers, thus NSEC5-unaware resolvers will treat the
zone as insecure.</t>

</section>
<section anchor="how-nsec5-works" title="How NSEC5 Works">

<t>With NSEC5, the original domain name is hashed using a VRF <xref target="ID.goldbe-vrf"/>
using the following steps:</t>

<t><list style="numbers">
  <t>The domain name is processed using a VRF keyed with the private
  NSEC5 key to obtain the NSEC5 proof.  Anyone who knows the public
  NSEC5 key, normally acquired via an NSEC5KEY RR, can verify that a
  given NSEC5 proof corresponds to a given domain name.</t>
  <t>The NSEC5 proof is then processed using a publicly-computable VRF
  proof-to-hash function to obtain the NSEC5 hash.  The NSEC5 hash can
  be computed by anyone who knows the input NSEC5 proof.</t>
</list></t>

<t>The NSEC5 hash determines the position of a domain name in an NSEC5
chain.</t>

<t>To sign a zone, the private NSEC5 key is used to compute the NSEC5
hashes for each name in the zone. These NSEC5 hashes are sorted in
canonical order <xref target="RFC4034"/>, and each consecutive pair forms an NSEC5
RR.  Each NSEC5 RR is signed offline using the private zone-signing
key.  The resulting signed chain of NSEC5 RRs is provided to all
authoritative servers for the zone, along with the private NSEC5 key.</t>

<t>To prove non-existence of a particular domain name in response to a
query, the server uses the private NSEC5 key to compute the NSEC5
proof and NSEC5 hash corresponding to the queried name.  The server
then identifies the NSEC5 RR that covers the NSEC5 hash, and responds
with this NSEC5 RR and its corresponding RRSIG signature RRset, as
well as a synthesized NSEC5PROOF RR that contains the NSEC5 proof
corresponding to the queried name.</t>

<t>To validate the response, the client verifies the following items:</t>

<t><list style="symbols">
  <t>The client uses the public NSEC5 key, normally acquired from the
NSEC5KEY RR, to verify that the NSEC5 proof in the NSEC5PROOF RR
corresponds to the queried name.</t>
  <t>The client uses the VRF proof-to-hash function to compute the NSEC5
hash from the NSEC5 proof in the NSEC5PROOF RR.  The client verifies
that the NSEC5 hash is covered by the NSEC5 RR.</t>
  <t>The client verifies that the NSEC5 RR is validly signed by the RRSIG
RRset.</t>
</list></t>

</section>
<section anchor="nsec5-algorithms" title="NSEC5 Algorithms">

<t>The algorithms used for NSEC5 authenticated denial are independent of
the algorithms used for DNSSEC signing. An NSEC5 algorithm defines how
the NSEC5 proof and the NSEC5 hash are computed and validated.</t>

<t>The NSEC5 proof corresponding to a name is computed using VRF_prove(), 
as specified in <xref target="ID.goldbe-vrf"/>.
The input to VRF_prove() is 
a private NSEC5 key followed by
an RR owner name in <xref target="RFC4034"/> canonical wire format.
The output NSEC5 proof is an octet string.</t>

<t>An NSEC5 hash corresponding to a name is computed from 
its NSEC5 proof using VRF_proof2hash(), as specified in <xref target="ID.goldbe-vrf"/>.
The input to VRF_proof2hash() is 
an NSEC5 proof as an octet string; 
the output NSEC5 hash is an octet string.</t>

<t>An NSEC5 proof for a name is verified using VRF_verify(),  as specified in
<xref target="ID.goldbe-vrf"/>.
The input is the NSEC5 public key, 
followed by an RR owner name in <xref target="RFC4034"/> canonical wire format,
followed by an NSEC5 proof as an octet string; 
the output is either VALID or INVALID.</t>

<t>This document defines the EC-P256-SHA256 NSEC5 algorithm as follows:</t>

<t><list style="symbols">
  <t>The VRF is the EC-VRF algorithm specified in <xref target="ID.goldbe-vrf"/>
(Section X) where
the secure hash function Hash is SHA-256 and 
the EC group G is the FIPS 186-3 P-256 curve. 
SHA-256 is specified in <xref target="RFC6234"/>.
The curve parameters are specified in <xref target="FIPS-186-3"/> (Section D.1.2.3)
and <xref target="RFC5114"/> (Section 2.6).</t>
  <t>The public key format to be used in the NSEC5KEY RR is defined in
Section 4 of <xref target="RFC6605"/> and thus is the same as the format used to
store ECDSA public keys in DNSKEY RRs.</t>
</list></t>

<t>This document defines the EC-ED25519-SHA256 NSEC5 algorithm as follows:</t>

<t><list style="symbols">
  <t>The VRF is the EC-VRF algorithm specified in <xref target="ID.goldbe-vrf"/>
(Section X) where
the secure hash function Hash is SHA-256 and 
the EC group G is the Ed25519 curve. 
SHA-256 is specified in <xref target="RFC6234"/>.
The curve parameters are specified in
<xref target="RFC7748"/> (Section 4.1).</t>
  <t>The public key format to be used in the NSEC5KEY RR is defined in
Section 3 of <xref target="RFC8080"/> and thus is the same as the format used to
store Ed25519 public keys in DNSKEY RRs.</t>
</list></t>

</section>
<section anchor="the-nsec5key-resource-record" title="The NSEC5KEY Resource Record">

<t>The NSEC5KEY RR stores a public NSEC5 key. The key allows clients to
validate an NSEC5 proof sent by a server.</t>

<section anchor="nsec5key-rdata-wire-format" title="NSEC5KEY RDATA Wire Format">

<t>The RDATA for the NSEC5KEY RR is as shown below:</t>

<figure><artwork><![CDATA[
                     1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|   Algorithm   |                  Public Key                   /
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t>Algorithm is a single octet identifying the NSEC5 algorithm.</t>

<t>Public Key is a variable-sized field holding public key material for
NSEC5 proof verification.</t>

</section>
<section anchor="nsec5key-rdata-presentation-format" title="NSEC5KEY RDATA Presentation Format">

<t>The presentation format of the NSEC5KEY RDATA is as follows:</t>

<t>The Algorithm field is represented as an unsigned decimal integer.</t>

<t>The Public Key field is represented in Base64 encoding. Whitespace is
allowed within the Base64 text.</t>

</section>
</section>
<section anchor="the-nsec5-resource-record" title="The NSEC5 Resource Record">

<t>The NSEC5 RR provides authenticated denial of existence for an RRset
or domain name. One NSEC5 RR represents one piece of an NSEC5 chain,
proving existence of the owner name and non-existence of other domain
names in the part of the hashed domain space that is covered until the next
owner name hashed in the RDATA.</t>

<section anchor="nsec5-rdata-wire-format" title="NSEC5 RDATA Wire Format">

<t>The RDATA for the NSEC5 RR is as shown below:</t>

<figure><artwork><![CDATA[
                     1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|            Key Tag            |     Flags     |  Next Length  |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                     Next Hashed Owner Name                    /
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
/                         Type Bit Maps                         /
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t>The Key Tag field contains the key tag value of the NSEC5KEY RR that
validates the NSEC5 RR, in network byte order. The value is computed
from the NSEC5KEY RDATA using the same algorithm used to
compute key tag values for DNSKEY RRs. This algorithm is defined in
<xref target="RFC4034"/>.</t>

<t>The Flags field is a single octet. The meaning of individual bits of
the field is defined in <xref target="nsec5_flags"/>.</t>

<t>The Next Length field is an unsigned single octet specifying the
length of the Next Hashed Owner Name field in octets.</t>

<t>The Next Hashed Owner Name field is a sequence of binary octets. It
contains an NSEC5 hash of the next domain name in the NSEC5 chain.</t>

<t>Type Bit Maps is a variable-sized field encoding RR types present at
the original owner name matching the NSEC5 RR. The format of the field
is equivalent to the format used in the NSEC3 RR, described in
<xref target="RFC5155"/>.</t>

</section>
<section anchor="nsec5_flags" title="NSEC5 Flags Field">

<t>The following one-bit NSEC5 flags are defined:</t>

<figure><artwork><![CDATA[
 0 1 2 3 4 5 6 7
+-+-+-+-+-+-+-+-+
|           |W|O|
+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style='empty'>
  <t>O - Opt-Out flag</t>
</list></t>

<t><list style='empty'>
  <t>W - Wildcard flag</t>
</list></t>

<t>All the other flags are reserved for future use and MUST be zero.</t>

<t>The Opt-Out flag has the same semantics as in NSEC3. The definition
and considerations in <xref target="RFC5155"/> are valid, except that NSEC3 is
replaced by NSEC5.</t>

<t>The Wildcard flag indicates that a wildcard synthesis is possible at
the original domain name level (i.e., there is a wildcard node
immediately descending from the immediate ancestor of the original
domain name).  The purpose of the Wildcard flag is to reduce the
maximum number of RRs required for an authenticated denial of
existence proof from (at most) three to (at most) two, 
as originally described in <xref target="I-D.gieben-nsec4"/>
Section 7.2.1.</t>

</section>
<section anchor="nsec5-rdata-presentation-format" title="NSEC5 RDATA Presentation Format">

<t>The presentation format of the NSEC5 RDATA is as follows:</t>

<t>The Key Tag field is represented as an unsigned decimal integer.</t>

<t>The Flags field is represented as an unsigned decimal integer.</t>

<t>The Next Length field is not represented.</t>

<t>The Next Hashed Owner Name field is represented as a sequence of
case-insensitive Base32hex digits without any whitespace and without
padding.</t>

<t>The Type Bit Maps representation is equivalent to the representation
used in NSEC3 RR, described in <xref target="RFC5155"/>.</t>

</section>
</section>
<section anchor="the-nsec5proof-resource-record" title="The NSEC5PROOF Resource Record">

<t>The NSEC5PROOF record is not to be included in the zone file.  The
NSEC5PROOF record contains the NSEC5 proof, proving the position of
the owner name in an NSEC5 chain.</t>

<section anchor="nsec5proof_rdata" title="NSEC5PROOF RDATA Wire Format">

<t>The RDATA for the NSEC5PROOF RR is shown below:</t>

<figure><artwork><![CDATA[
                     1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|            Key Tag            |        Owner Name Hash        /
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t>Key Tag field contains the key tag value of the NSEC5KEY RR that
validates the NSEC5PROOF RR, in network byte order.</t>

<t>Owner Name Hash is a variable-sized sequence of binary octets encoding
the NSEC5 proof of the owner name of the RR.</t>

</section>
<section anchor="nsec5proof-rdata-presentation-format" title="NSEC5PROOF RDATA Presentation Format">

<t>The presentation format of the NSEC5PROOF RDATA is as follows:</t>

<t>The Key Tag field is represented as an unsigned decimal integer.</t>

<t>The Owner Name Hash is represented in Base64 encoding. Whitespace is
allowed within the Base64 text.</t>

</section>
</section>
<section anchor="nsec5_proofs" title="Types of Authenticated Denial of Existence with NSEC5">

<t>This section summarizes all possible types of authenticated denial of
existence.  For each type the following lists are included:</t>

<t><list style="numbers">
  <t>Facts to prove: the minimum amount of information that an
  authoritative server must provide to a client to assure the client
  that the response content is valid.</t>
  <t>Authoritative server proofs: the names for which the NSEC5PROOF RRs
  are synthesized and added into the response along the NSEC5 RRs
  matching or covering each such name. These records together prove
  the listed facts.</t>
  <t>Validator checks: the individual checks that a validating server is
  required to perform on a response. The response content is
  considered valid only if all of the checks pass.</t>
</list></t>

<t>If NSEC5 is said to match a domain name, the owner name of the NSEC5
RR has to be equivalent to an NSEC5 hash of that domain name. If an
NSEC5 RR is said to cover a domain name, the NSEC5 hash of the domain
name must sort in canonical order between that NSEC5 RR's Owner Name
and Next Hashed Owner Name.</t>

<section anchor="name-error-responses" title="Name Error Responses">

<t>Facts to prove:</t>

<t><list style='empty'>
  <t>Non-existence of RRset that explictly matches the QNAME.  [Shumon, Dave, check this terminology.]</t>
</list></t>

<t><list style='empty'>
  <t>Non-existence of RRset that matches QNAME via wildcard expansion. [Shumon, Dave, check this terminology.]</t>
</list></t>

<t><list style='empty'>
  <t>The QNAME does not fall into a delegation. [Shumon, Dave, check this terminology. "fall into"?]</t>
</list></t>

<t><list style='empty'>
  <t>The QNAME does not fall into a DNAME redirection.</t>
</list></t>

<t>Authoritative server proofs:</t>

<t><list style='empty'>
  <t>NSEC5PROOF for closest encloser and matching NSEC5 RR.</t>
</list></t>

<t><list style='empty'>
  <t>NSEC5PROOF for next closer name and covering NSEC5 RR.</t>
</list></t>

<t>Validator checks:</t>

<t><list style='empty'>
  <t>Closest encloser is in the zone.</t>
</list></t>

<t><list style='empty'>
  <t>The NSEC5 RR matching the closest encloser has its Wildcard flag cleared.</t>
</list></t>

<t><list style='empty'>
  <t>The NSEC5 RR matching the closest encloser does not have NS without SOA in the Type Bit Map.</t>
</list></t>

<t><list style='empty'>
  <t>The NSEC5 RR matching the closest encloser does not have DNAME in the Type Bit Map.</t>
</list></t>

<!--> Next closer name is derived correctly.-->

<t><list style='empty'>
  <t>Next closer name is not in the zone.</t>
</list></t>

</section>
<section anchor="no-data-responses" title="No Data Responses">

<t>The processing of a No Data response for DS QTYPE differs if the
Opt-Out is in effect. For DS QTYPE queries, the validator has two
possible checking paths.  The correct path can be simply decided by
inspecting if the NSEC5 RR in the response matches the QNAME.</t>

<t>Note that the Opt-Out is valid only for DS QTYPE queries.</t>

<section anchor="no-data-response-opt-out-not-in-effect" title="No Data Response, Opt-Out Not In Effect">

<t>Facts to prove:</t>

<t><list style='empty'>
  <t>Existence of an RRset explicitly matching the QNAME.</t>
</list></t>

<t><list style='empty'>
  <t>Non-existence of QTYPE RRset matching the QNAME.</t>
</list></t>

<t><list style='empty'>
  <t>Non-existence of CNAME RRset matching the QNAME.</t>
</list></t>

<t>Authoritative server proofs:</t>

<t><list style='empty'>
  <t>NSEC5PROOF for the QNAME and matching NSEC5 RR.</t>
</list></t>

<t>Validator checks:</t>

<t><list style='empty'>
  <t>QNAME is in the zone.</t>
</list></t>

<t><list style='empty'>
  <t>NSEC5 RR matching the QNAME does not have QTYPE in Type Bit Map.</t>
</list></t>

<t><list style='empty'>
  <t>NSEC5 RR matching the QNAME does not have CNAME in Type Bit Map.</t>
</list></t>

</section>
<section anchor="no-data-response-opt-out-in-effect" title="No Data Response, Opt-Out In Effect">

<t>[Sharon has no idea how this works, someone else should check this for correctness!]</t>

<t>Facts to prove:</t>

<t><list style='empty'>
  <t>The delegation is not covered by the NSEC5 chain.</t>
</list></t>

<t>Authoritative server proofs:</t>

<t><list style='empty'>
  <t>NSEC5PROOF for closest provable encloser and matching NSEC5 RR.</t>
</list></t>

<t>Validator checks:</t>

<t><list style='empty'>
  <t>Closest provable encloser is in zone.</t>
</list></t>

<t><list style='empty'>
  <t>Closest provable encloser covers (not matches) the QNAME.  [Sharon says that 
this terminology "covers (not matches)" is really confusing to me.  What does
"covers" mean in the context of a DNS name? Is this defined in some other
RFC? If so, maybe we should point to that other RFC?]</t>
</list></t>

<t><list style='empty'>
  <t>NSEC5 RR matching the closest provable encloser has Opt-Out flag set.</t>
</list></t>

</section>
</section>
<section anchor="wildcard-responses" title="Wildcard Responses">

<t>Facts to prove:</t>

<t><list style='empty'>
  <t>Non-existence of RRset matching the QNAME.</t>
</list></t>

<t><list style='empty'>
  <t>Non-existence of wildcard closer to the QNAME.  [Sharon says: what does "wildcard 
closer to the QNAME" actually mean? Probably there is a better way to say this.]</t>
</list></t>

<t><list style='empty'>
  <t>Existence of the wildcard expansion of the QNAME. [Sharon added this. Check 
it please!]</t>
</list></t>

<t>Authoritative server proofs:</t>

<t><list style='empty'>
  <t>NSEC5PROOF for next closer name and covering NSEC5 RR.</t>
</list></t>

<t><list style='empty'>
  <t>A signed positive response for the wildcard expansion of the QNAME, 
  as specified in <xref target="RFC4035" />. [Sharon says: Guys, please check this, 
  both the language and the pointer to the RFC. I added this based on 
  stuff in that chat window from 3/10/2017.]</t>
</list></t>

<t>Validator checks:</t>

<!--> Next closer name is derived correctly.-->

<t><list style='empty'>
  <t>Next closer name is not in the zone.</t>
</list></t>

<t><list style='empty'>
  <t>[Something here about the positive response. Not sure what.]</t>
</list></t>

</section>
<section anchor="wildcard-no-data-responses" title="Wildcard No Data Responses">

<t>[Sharon says: please check again this section, as I am not sure I understand it!]</t>

<t>Facts to prove:</t>

<t><list style='empty'>
  <t>Non-existence of RRset that explictly matches the QNAME.  [Shumon, Dave, check this terminology.]</t>
</list></t>

<t><list style='empty'>
  <t>Non-existence of QTYPE RRset that matches QNAME via wildcard expansion. [Shumon, Dave, check this terminology.]</t>
</list></t>

<t><list style='empty'>
  <t>Non-existence of CNAME RRset that matches QNAME via wildcard expansion.</t>
</list></t>

<t><list style='empty'>
  <t>No wildcard closer to the QNAME exists.  [Sharon says as before I don't understand
what this means.]</t>
</list></t>

<t>Authoritative server proofs:</t>

<t><list style='empty'>
  <t>NSEC5PROOF for source of synthesis (i.e., wildcard at closest
encloser) and matching NSEC5 RR.</t>
</list></t>

<t><list style='empty'>
  <t>NSEC5PROOF for next closer name and covering NSEC5 RR.</t>
</list></t>

<t>Validator checks:</t>

<t><list style='empty'>
  <t>Source of synthesis matches the QNAME. [Sharon says: again, I'm not sure what 
this means. Are we saying "Source of synthesis matches QNAME via wildcard expansion." ?]</t>
</list></t>

<t><list style='empty'>
  <t>NSEC5 RR matching source of synthesis does not have QTYPE in Type Bit Map.</t>
</list></t>

<t><list style='empty'>
  <t>NSEC5 RR matching source of synthesis does not have CNAME in Type Bit Map.</t>
</list></t>

<!--> Next closer name is derived correctly.-->

<t><list style='empty'>
  <t>Next closer name is not in the zone.</t>
</list></t>

</section>
</section>
<section anchor="authoritative-server-considerations" title="Authoritative Server Considerations">

<section anchor="zone_signing" title="Zone Signing">

<t>Zones using NSEC5 MUST satisfy the same properties as described in
Section 7.1 of <xref target="RFC5155"/>, with NSEC3 replaced by NSEC5. In addition,
the following conditions MUST be satisfied as well:</t>

<t><list style="symbols">
  <t>If the original owner name has a wildcard label immediately
descending from the original owner name, the corresponding NSEC5 RR
MUST have the Wildcard flag set in the Flags field. Otherwise, the
flag MUST be cleared.</t>
  <t>The zone apex MUST include an NSEC5KEY RRset containing a NSEC5
public key allowing verification of the current NSEC5 chain.</t>
</list></t>

<t>The following steps describe one possible method to properly add
required NSEC5 related records into a zone. This is not the only such
existing method.</t>

<t><list style="numbers">
  <t>Select an algorithm for NSEC5.  Generate the public and private NSEC5 keys.</t>
  <t>Add an NSEC5KEY RR into the zone apex containing the public NSEC5 key.</t>
  <t>For each unique original domain name in the zone and each empty
  non-terminal, add an NSEC5 RR. If Opt-Out is used, owner names of
  unsigned delegations MAY be excluded.  <vspace blankLines='1'/>
A. The owner name of the NSEC5 RR is the NSEC5 hash of the
   original owner name encoded in Base32hex without padding,
   prepended as a single label to the zone name.  <vspace blankLines='1'/>
B. Set the Key Tag field to be the key tag corresponding
   to the public NSEC5 key.  <vspace blankLines='1'/>
C. Clear the Flags field. If Opt-Out is being used, set the Opt-Out
   flag. If there is a wildcard label directly descending from the
   original domain name, set the Wildcard flag. Note that the
   wildcard can be an empty non-terminal (i.e., the wildcard synthesis
   does not take effect and therefore the flag is not to be set).  <vspace blankLines='1'/>
D. Set the Next Length field to a value determined by the used
   NSEC5 algorithm. Leave the Next Hashed Owner Name field blank.  <vspace blankLines='1'/>
E. Set the Type Bit Maps field based on the RRsets present at the
   original owner name.</t>
  <t>Sort the set of NSEC5 RRs into canonical order.</t>
  <t>For each NSEC5 RR, set the Next Hashed Owner Name field by using
  the owner name of the next NSEC5 RR in the canonical order. If the
  updated NSEC5 is the last NSEC5 RR in the chain, the owner name of the
  first NSEC5 RR in the chain is used instead.</t>
</list></t>

<t>The NSEC5KEY and NSEC5 RRs MUST have the same class as the zone SOA
RR.  Also the NSEC5 RRs SHOULD have the same TTL value as the SOA
minimum TTL field.</t>

<t>Notice that a use of Opt-Out is not indicated in the zone. This does
not affect the ability of a server to prove insecure delegations. The
Opt-Out MAY be part of the zone-signing tool configuration.</t>

<section anchor="precompute" title="Precomputing Closest Provable Encloser Proofs">

<t>Per <xref target="nsec5_proofs"/>, the worst-case scenario when answering a negative 
query with NSEC5 requires authoritative server to respond with two 
NSEC5PROOF RRs and
two NSEC5 RRs. One pair of NSEC5PROOF and NSEC5
RRs corresponds to the closest provable encloser, and the other pair
corresponds to the next closer name.  The NSEC5PROOF corresponding to
the next closer name MUST be computed on the fly by the authoritative
server when responding to the query. However, the NSEC5PROOF
corresponding to the closest provable encloser MAY be precomputed and
stored as part of zone signing.</t>

<t>Precomputing NSEC5PROOF RRs can halve the number of online
cryptographic computations required when responding to a negative
query. NSEC5PROOF RRs MAY be precomputed as part of zone signing as
follows: For each NSEC5 RR, compute an NSEC5PROOF RR corresponding to
the original owner name of the NSEC5 RR. The content of the
precomputed NSEC5PROOF record MUST be the same as if the record was
computed on the fly when serving the zone.  NSEC5PROOF records are not
part of the zone and SHOULD be stored separately from the zone file.</t>

</section>
</section>
<section anchor="zone-serving" title="Zone Serving">

<t>This specification modifies DNSSEC-enabled DNS responses generated by
authoritative servers. In particular, it replaces use of NSEC or NSEC3
RRs in such responses with NSEC5 RRs and adds NSEC5PROOF RRs.</t>

<t>According to the type of a response, an authoritative server MUST
include NSEC5 RRs in the response, as defined in <xref target="nsec5_proofs"/>. For
each NSEC5 RR in the response, a corresponding RRSIG RRset and an
NSEC5PROOF MUST be added as well. The NSEC5PROOF RR has its owner name
set to the domain name required according to the description in 
<xref target="nsec5_proofs"/>. The
class and TTL of the NSEC5PROOF RR MUST be the same as the class and
TTL value of the corresponding NSEC5 RR. The RDATA payload of the
NSEC5PROOF is set according to the description in
<xref target="nsec5proof_rdata"/>.</t>

<t>Notice that the NSEC5PROOF owner name can be a wildcard (e.g., source
of synthesis proof in wildcard No Data responses). The name also
always matches the domain name required for the proof while the NSEC5
RR may only cover (not match) the name in the proof (e.g., closest
encloser in Name Error responses).</t>

<t>If NSEC5 is used, an answering server MUST use exactly one NSEC5 chain
for one signed zone.</t>

<t>NSEC5 MUST NOT be used in parallel with NSEC, NSEC3, or any other
authenticated denial of existence mechanism that allows for
enumeration of zone contents, as this would defeat a principal
security goal of NSEC5.</t>

<t>Similarly to NSEC3, the owner names of NSEC5 RRs are not represented
in the NSEC5 chain and therefore NSEC5 records deny their own
existence. The desired behavior caused by this paradox is the same as
described in Section 7.2.8 of <xref target="RFC5155"/>.</t>

</section>
<section anchor="nsec5key-rollover-mechanism" title="NSEC5KEY Rollover Mechanism">

<t>Replacement of the NSEC5 key implies generating a new NSEC5 chain. The
NSEC5KEY rollover mechanism is similar to "Pre-Publish Zone Signing
Key Rollover" as specified in <xref target="RFC6781"/>. The NSEC5KEY rollover MUST
be performed as a sequence of the following steps:</t>

<t><list style="numbers">
  <t>A new public NSEC5 key is added into the NSEC5KEY RRset in the zone
  apex.</t>
  <t>The old NSEC5 chain is replaced by a new NSEC5 chain constructed
  using the new key. This replacement MUST happen as a single atomic
  operation; the server MUST NOT be responding with RRs from both the
  new and old chain at the same time.</t>
  <t>The old public key is removed from the NSEC5KEY RRset in the zone
  apex.</t>
</list></t>

<t>The minimum delay between steps 1 and 2 MUST be the time it takes for
the data to propagate to the authoritative servers, plus the TTL value
of the old NSEC5KEY RRset.</t>

<t>The minimum delay between steps 2 and 3 MUST be the time it takes for
the data to propagate to the authoritative servers, plus the maximum
zone TTL value of any of the data in the previous version of the zone.</t>

</section>
<section anchor="secondary-servers" title="Secondary Servers">

<t>This document does not define mechanism to distribute private NSEC5 keys.
See <xref target="keyleak"/> for security considerations for private NSEC5 keys.</t>

</section>
<section anchor="zones-using-unknown-nsec5-algorithms" title="Zones Using Unknown NSEC5 Algorithms">

<t>Zones that are signed with an unknown NSEC5 algorithm or with an
unavailable private NSEC5 key cannot be effectively served. Such zones
SHOULD be rejected when loading and servers SHOULD respond with
RCODE=2 (Server failure) when handling queries that would fall under
such zones.</t>

</section>
<section anchor="dynamic-updates" title="Dynamic Updates">

<t>A zone signed using NSEC5 MAY accept dynamic updates <xref target="RFC2136"/>.  The
changes to the zone MUST be performed in a way that ensures that the
zone satisfies the properties specified in <xref target="zone_signing"/> at any
time.  The process described in <xref target="RFC5155"/> Section 7.5 describes how
to handle the issues surrounding the handling of empty non-terminals
as well as Opt-Out.</t>

<t>It is RECOMMENDED that the server rejects all updates containing
changes to the NSEC5 chain and its related RRSIG RRs, and performs
itself any required alternations of the NSEC5 chain induced by the
update.  Alternatively, the server MUST verify that all the properties
are satisfied prior to performing the update atomically.</t>

</section>
</section>
<section anchor="resolver-considerations" title="Resolver Considerations">

<t>The same considerations as described in Section 9 of <xref target="RFC5155"/> for
NSEC3 apply to NSEC5. In addition, as NSEC5 RRs can be validated only
with appropriate NSEC5PROOF RRs, the NSEC5PROOF RRs MUST be all
together cached and included in responses with NSEC5 RRs.</t>

</section>
<section anchor="validator-considerations" title="Validator Considerations">

<section anchor="validating-responses" title="Validating Responses">

<t>The validator MUST ignore NSEC5 RRs with Flags field values other than
the ones defined in <xref target="nsec5_flags"/>.</t>

<t>The validator MAY treat responses as bogus if the response contains
NSEC5 RRs that refer to a different NSEC5KEY.</t>

<t>According to a type of a response, the validator MUST verify all
conditions defined in <xref target="nsec5_proofs"/>. Prior to making decision based
on the content of NSEC5 RRs in a response, the NSEC5 RRs MUST be
validated.</t>

<t>To validate a denial of existence, public NSEC5 keys for the zone are
required in addition to DNSSEC public keys. Similarly to DNSKEY RRs,
the NSEC5KEY RRs are present at the zone apex.</t>

<t>The NSEC5 RR is validated as follows:</t>

<t><list style="numbers">
  <t>Select a correct public NSEC5 key to validate the NSEC5 proof. The
  Key Tag value of the NSEC5PROOF RR must match with the key tag value
  computed from the NSEC5KEY RDATA.</t>
  <t>Validate the NSEC5 proof present in the NSEC5PROOF Owner Name Hash
  field using the public NSEC5 key. If there are multiple NSEC5KEY RRs
  matching the key tag, at least one of the keys must validate the
  NSEC5 proof.</t>
  <t>Compute the NSEC5 hash value from the NSEC5 proof and check if the
  response contains NSEC5 RR matching or covering the computed NSEC5
  hash.  The TTL values of the NSEC5 and NSEC5PROOF RRs must be the
  same.</t>
  <t>Validate the signature on the NSEC5 RR.</t>
</list></t>

<t>If the NSEC5 RR fails to validate, it MUST be ignored. If some of the
conditions required for an NSEC5 proof are not satisfied, the response
MUST be treated as bogus.</t>

<t>Notice that determining the closest encloser and next closer name in
NSEC5 is easier than in NSEC3. NSEC5 and NSEC5PROOF RRs are always
present in pairs in responses and the original owner name of the NSEC5
RR matches the owner name of the NSEC5PROOF RR.</t>

</section>
<section anchor="validating-referrals-to-unsigned-subzones" title="Validating Referrals to Unsigned Subzones">

<t>The same considerations as defined in Section 8.9 of <xref target="RFC5155"/> for
NSEC3 apply to NSEC5.</t>

</section>
<section anchor="responses-with-unknown-nsec5-algorithms" title="Responses With Unknown NSEC5 Algorithms">

<t>A validator MUST ignore NSEC5KEY RRs with unknown NSEC5
algorithms. The practical result of this is that zones signed with
unknown algorithms will be considered bogus.</t>

</section>
</section>
<section anchor="special-considerations" title="Special Considerations">

<section anchor="transition-mechanism" title="Transition Mechanism">

<t>[TODO: The following information will be covered.]</t>

<t><list style="symbols">
  <t>Transition to NSEC5 from NSEC/NSEC3</t>
  <t>Transition from NSEC5 to NSEC/NSEC3</t>
  <t>Transition to new NSEC5 algorithms</t>
</list></t>

</section>
<section anchor="private-nsec5-keys" title="Private NSEC5 keys">

<t>This document does not define a format to store private NSEC5
keys. Use of a standardized and adopted format is RECOMMENDED.</t>

<t>The private NSEC5 key MAY be shared between multiple zones, however a
separate key is RECOMMENDED for each zone.</t>

</section>
<section anchor="domain-name-length-restrictions" title="Domain Name Length Restrictions">

<t>NSEC5 creates additional restrictions on domain name lengths. In
particular, zones with names that, when converted into hashed owner
names, exceed the 255 octet length limit imposed by <xref target="RFC1035"/> cannot
use this specification.</t>

<t>The actual maximum length of a domain name depends on the length of
the zone name and the NSEC5 algorithm used.</t>

<t>All NSEC5 algorithms defined in this document use 256-bit NSEC5 hash
values.  Such a value can be encoded in 52 characters in Base32hex
without padding.  When constructing the NSEC5 RR owner name, the
encoded hash is prepended to the name of the zone as a single label
which includes the length field of a single octet.  The maximum length
of the zone name in wire format using the 256-bit hash is therefore
202 octets (255 - 53).</t>

</section>
</section>
<section anchor="implementation-status" title="Implementation Status">

<t>NSEC5 has been implemented for the Knot DNS authoritative server
(version 1.6.4) and the Unbound recursive server (version 1.5.9).  The
implementations did not introduce additional library dependencies; all
cryptographic primitives are already present in OpenSSL v1.0.2j, which
is used by both implementations.  The implementations support the full
spectrum of negative responses, (i.e., NXDOMAIN, NODATA, Wildcard,
Wildcard NODATA, and unsigned delegation) using the EC-P256-SHA256
algorithm. The code is deliberately modular, so that the
EC-ED25519-SHA256 algorithm could be implemented by using the Ed25519
elliptic curve <xref target="RFC8080"/> as a drop-in replacement for the P256
elliptic curve.  The authoritative server implements the optimization
from <xref target="precompute"/> to precompute the NSEC5PROOF RRs matching each
NSEC5 record.</t>

</section>
<section anchor="performance-considerations" title="Performance Considerations">

<t>The performance of NSEC5 has been evaluated in <xref target="nsec5ecc"/>.</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<section anchor="zea" title="Zone Enumeration Attacks">

<t>NSEC5 is robust to zone enumeration via offline dictionary attacks by
any attacker that does not know the private NSEC5 key. Without the
private NSEC5 key, that attacker cannot compute the NSEC5 proof that
corresponds to a given domain name.  The only way it can learn the
NSEC5 proof value for a domain name is by querying the authoritative
server for that name. Without the NSEC5 proof value, the attacker
cannot learn the NSEC5 hash value. Thus, even an attacker that
collects the entire chain of NSEC5 RR for a zone cannot use offline
attacks to "reverse" that NSEC5 hash values in these NSEC5 RR and thus
learn which names are present in the zone.  A formal cryptographic
proof of this property is in <xref target="nsec5"/> and <xref target="nsec5ecc"/>.</t>

</section>
<section anchor="keyleak" title="Compromise of the Private NSEC5 Key">

<t>NSEC5 requires authoritative servers to hold the private NSEC5 key,
but not the private zone-signing keys or the private key-signing keys
for the zone.</t>

<t>The private NSEC5 key cannot be used to modify zone contents, because
zone contents are signed using the private zone-signing key.  As such,
a compromise of the private NSEC5 key does not compromise the
integrity of the zone.  An adversary that learns the private NSEC5 key
can, however, perform offline zone-enumeration attacks.  For this
reason, the private NSEC5 key need only be as secure as the DNSSEC
records whose privacy (against zone enumeration) is being protected by
NSEC5.  A formal cryptographic proof of this property is in <xref target="nsec5"/>
and <xref target="nsec5ecc"/>.</t>

<t>To preserve this property of NSEC5, the private NSEC5 key MUST be
different from the private zone-signing keys or key-signing keys for
the zone.</t>

</section>
<section anchor="keylen" title="Key Length Considerations">

<t>The NSEC5 key must be long enough to withstand attacks for as long as
the privacy of the zone contents is important. Even if the NSEC5 key
is rolled frequently, its length cannot be too short, because zone
privacy may be important for a period of time longer than the lifetime
of the key.  For example, an attacker might collect the entire chain
of NSEC5 RR for the zone over one short period, and then, later (even
after the NSEC5 key expires) perform an offline dictionary attack that
attempts to reverse the NSEC5 hash values present in the NSEC5 RRs.
This is in contrast to zone-signing and key-signing keys used in
DNSSEC; these keys, which ensure the authenticity and integrity of the
zone contents, need to remain secure only during their lifetime.</t>

</section>
<section anchor="hashcol" title="NSEC5 Hash Collisions">

<t>If the NSEC5 hash of a QNAME collides with the NSEC5 hash of the owner
name of an NSEC5 RR, it will be impossible to prove the non-existence
of the colliding QNAME. However, the NSEC5 VRFs ensure that obtaining
such a collision is as difficult as obtaining a collision in the
SHA-256 hash function, requiring approximately 2^128 effort. Note that
DNSSEC already relies on the assumption that a cryptographic hash
function is collision-resistant, since these hash functions are used
for generating and validating signatures and DS RRs. See also the
discussion on key lengths in <xref target="nsec5"/>.</t>

</section>
</section>
<section anchor="iana_considerations" title="IANA Considerations">

<t>This document updates the IANA registry "Domain Name System (DNS)
Parameters" in subregistry "Resource Record (RR) TYPEs", by defining
the following new RR types:</t>

<t><list style='empty'>
  <t>NSEC5KEY   value TBD.</t>
</list></t>

<t><list style='empty'>
  <t>NSEC5      value TBD.</t>
</list></t>

<t><list style='empty'>
  <t>NSEC5PROOF value TBD.</t>
</list></t>

<t>This document creates a new IANA registry for NSEC5 algorithms.  This
registry is named "DNSSEC NSEC5 Algorithms". The initial content of
the registry is:</t>

<t><list style='empty'>
  <t>0     is Reserved.</t>
</list></t>

<t><list style='empty'>
  <t>1     is EC-P256-SHA256.</t>
</list></t>

<t><list style='empty'>
  <t>2     is EC-ED25519-SHA256.</t>
</list></t>

<t><list style='empty'>
  <t>3-255 is Available for assignment.</t>
</list></t>

<t>This document updates the IANA registry "DNS Security Algorithm
Numbers" by defining following aliases:</t>

<t><list style='empty'>
  <t>TBD is NSEC5-ECDSAP256SHA256 alias for ECDSAP256SHA256 (13).</t>
</list></t>

<t><list style='empty'>
  <t>TBD is NSEC5-ED25519, alias for ED25519 (15).</t>
</list></t>

</section>
<section anchor="contributors" title="Contributors">

<t>This document would not be possible without help of
Moni Naor (Weizmann Institute),
Sachin Vasant (Cisco Systems),
Leonid Reyzin (Boston University), and
Asaf Ziv (Weizmann Institute)
who contributed to the design of NSEC5.
Ondrej Sury (CZ.NIC Labs), and
Duane Wessels (Verisign Labs)
provided advice on the implementation of NSEC5, and assisted with
evaluating its performance.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1034;
&RFC1035;
&RFC2119;
&RFC2136;
&RFC2181;
&RFC2308;
&RFC4033;
&RFC4034;
&RFC4035;
&RFC4648;
&RFC5114;
&RFC5155;
&RFC6234;
&RFC6605;
&RFC7748;
&RFC8080;
<reference anchor="ID.goldbe-vrf" >
  <front>
    <title>Verifiable Random Functions (VRFs)</title>
    <author initials="S." surname="Goldberg">
      <organization></organization>
    </author>
    <author initials="D." surname="Papadopoulos">
      <organization></organization>
    </author>
    <author initials="J." surname="Vcelak">
      <organization></organization>
    </author>
    <date year="2017" month="March"/>
  </front>
</reference>
<reference anchor="FIPS-186-3" >
  <front>
    <title>Digital Signature Standard (DSS)</title>
    <author >
      <organization>National Institute for Standards and Technology</organization>
    </author>
    <date year="2009" month="June"/>
  </front>
  <seriesInfo name="FIPS" value="PUB 186-3"/>
</reference>


    </references>

    <references title='Informative References'>

&RFC6781;
&RFC7129;
&RFC7719;
&I-D.gieben-nsec4;
<reference anchor="nsec5" target="https://eprint.iacr.org/2014/582.pdf">
  <front>
    <title>NSEC5: Provably Preventing DNSSEC Zone Enumeration</title>
    <author initials="S." surname="Goldberg">
      <organization></organization>
    </author>
    <author initials="M." surname="Naor">
      <organization></organization>
    </author>
    <author initials="D." surname="Papadopoulos">
      <organization></organization>
    </author>
    <author initials="L." surname="Reyzin">
      <organization></organization>
    </author>
    <author initials="S." surname="Vasant">
      <organization></organization>
    </author>
    <author initials="A." surname="Ziv">
      <organization></organization>
    </author>
    <date year="2014" month="July"/>
  </front>
  <seriesInfo name="in" value="NDSS'15"/>
</reference>
<reference anchor="nsec5ecc" target="https://eprint.iacr.org/2017/099.pdf">
  <front>
    <title>Can NSEC5 be Practical for DNSSEC Deployments?</title>
    <author initials="D." surname="Papadopoulos">
      <organization></organization>
    </author>
    <author initials="D." surname="Wessels">
      <organization></organization>
    </author>
    <author initials="S." surname="Huque">
      <organization></organization>
    </author>
    <author initials="J." surname="Vcelak">
      <organization></organization>
    </author>
    <author initials="M." surname="Naor">
      <organization></organization>
    </author>
    <author initials="L." surname="Reyzin">
      <organization></organization>
    </author>
    <author initials="S." surname="Goldberg">
      <organization></organization>
    </author>
    <date year="2017" month="February"/>
  </front>
  <seriesInfo name="in" value="ePrint Cryptology Archive 2017/099"/>
</reference>
<reference anchor="nsec3gpu" >
  <front>
    <title>GPU-Based NSEC3 Hash Breaking</title>
    <author initials="M." surname="Wander">
      <organization></organization>
    </author>
    <author initials="L." surname="Schwittmann">
      <organization></organization>
    </author>
    <author initials="C." surname="Boelmann">
      <organization></organization>
    </author>
    <author initials="T." surname="Weis">
      <organization></organization>
    </author>
    <date year="2014"/>
  </front>
  <seriesInfo name="in" value="IEEE Symp. Network Computing and Applications (NCA)"/>
</reference>
<reference anchor="nsec3walker" target="http://dnscurve.org/nsec3walker.html">
  <front>
    <title>Nsec3 walker</title>
    <author initials="D.J." surname="Bernstein">
      <organization></organization>
    </author>
    <date year="2011"/>
  </front>
</reference>
<reference anchor="nmap-nsec-enum" target="https://nmap.org/nsedoc/scripts/dns-nsec-enum.html">
  <front>
    <title>nmap: dns-nsec-enum</title>
    <author initials="J.R." surname="Bond">
      <organization></organization>
    </author>
    <date year="2011"/>
  </front>
</reference>
<reference anchor="nmap-nsec3-enum" target="https://nmap.org/nsedoc/scripts/dns-nsec3-enum.html">
  <front>
    <title>nmap: dns-nsec3-enum</title>
    <author initials="A." surname="Nikolic">
      <organization></organization>
    </author>
    <author initials="J.R." surname="Bond">
      <organization></organization>
    </author>
    <date year="2011"/>
  </front>
</reference>
<reference anchor="nsec3map" target="https://github.com/anonion0/nsec3map.">
  <front>
    <title>nsec3map with John the Ripper plugin</title>
    <author >
      <organization>anonion0</organization>
    </author>
    <date year="2015"/>
  </front>
</reference>
<reference anchor="ldns-walk" target="http://git.nlnetlabs.nl/ldns/tree/examples/ldns-walk.c">
  <front>
    <title>ldns</title>
    <author >
      <organization>NLNetLabs</organization>
    </author>
    <date year="2015"/>
  </front>
</reference>
<reference anchor="MRV99" >
  <front>
    <title>Verifiable Random Functions</title>
    <author initials="S." surname="Michali">
      <organization></organization>
    </author>
    <author initials="M." surname="Rabin">
      <organization></organization>
    </author>
    <author initials="S." surname="Vadhan">
      <organization></organization>
    </author>
    <date year="1999"/>
  </front>
  <seriesInfo name="in" value="FOCS"/>
</reference>


    </references>


<section anchor="examples" title="Examples">

<t>We use small DNS zone with three names and four types (SOA, NS, A, and TXT)
to illustrate how denying responses are handled with NSEC5.  For brevity,
the class is not shown (defaults to IN) and the SOA record is shortened,
resulting in the following zone file:</t>

<t><list style='empty'>
  <t>example.org.        SOA ( &#8230; )</t>
</list></t>

<t><list style='empty'>
  <t>example.org.        NS  a.example.org.</t>
</list></t>

<t><list style='empty'>
  <t>c.example.org.      A 192.0.2.1</t>
</list></t>

<t><list style='empty'>
  <t>c.example.org.      TXT "c record"</t>
</list></t>

<t><list style='empty'>
  <t>g.example.org.      A 192.0.2.1</t>
</list></t>

<t><list style='empty'>
  <t>g.example.org.      TXT "g record"</t>
</list></t>

<t><list style='empty'>
  <t>*.a.example.org.    TXT "wildcard record"</t>
</list></t>

<section anchor="name-error-example" title="Name Error Example">

<t>Consider a query for a type A record for a.b.c.example.org.</t>

<t>The server must prove the following facts:</t>

<t><list style="symbols">
  <t>Existence of closest encloser c.example.org.</t>
  <t>Non-existence of wildcard at closest encloser *.c.example.org.</t>
  <t>Non-existence of next closer b.c.example.org.</t>
</list></t>

<t>To do this, the server returns:</t>

<t><list style="symbols">
  <t>NSEC5PROOF RR for c.example.com.
The owner name of this NSEC5PROOF RR is c.example.com and the RDATA is
the NSEC5 proof corresponding to c.example.com. Per <xref target="precompute"/>, this
NSEC5PROOF RR may be precomputed.</t>
</list></t>

<t>[stick the dig output for this NSEC5PROOF RR here.]</t>

<t><list style="symbols">
  <t>Signed NSEC5 RR "matching" c.example.org its with Wildcard flag cleared.
The NSEC5 RR has its owner name equal to the NSEC5 hash of c.example.org,
which is XXXXX324X.
NSEC5 RRs are always precomputed.</t>
</list></t>

<t>[stick the dig output for this NSEC5 RR here.]</t>

<t><list style="symbols">
  <t>An NSEC5PROOF RR for b.c.example.org.  This
NSEC5PROOF RR must be computed on-the-fly.</t>
</list></t>

<t>[stick the dig output for this NSEC5PROOF RR here.]</t>

<t><list style="symbols">
  <t>Signed  NSEC5 RR "covering" b.c.example.org.
The NSEC5 hash of b.c.example.org, which is XXXXXXXXXXXX,
sorts in canonical order between the
"covering" NSEC5 RR's Owner Name and Next Hashed Owner Name.</t>
</list></t>

<t>[stick the dig output for this NSEC5PROOF RR here.]</t>

<t>[NOTE: ALSO THIS EXAMPLE DOESN'T DISCUSS CNAME AND DNAME. SOMEONE
MIGHT WANT TO ADD.]</t>

</section>
<section anchor="no-data-example-opt-out-not-in-effect" title="No Data Example, Opt-Out Not In Effect">

<t>Consider a query for a type MX record for c.example.org.</t>

<t>The server must prove the following facts:</t>

<t><list style="symbols">
  <t>Existence of c.example.org. for any type other than MX or CNAME</t>
</list></t>

<t>To do this, the server returns:</t>

<t><list style="symbols">
  <t>NSEC5PROOF RR for c.example.com.    Per <xref target="precompute"/>, this
NSEC5PROOF RR may be precomputed.</t>
</list></t>

<t>[stick the dig output for this NSEC5PROOF RR here.]</t>

<t><list style="symbols">
  <t>Signed NSEC5 RR "matching" c.example.org
its with CNAME and MX Type Bits cleared. This NSEC5 RR has its owner
name equal to the NSEC5 hash of c.example.org.  NSEC5 RR are always precomputed.</t>
</list></t>

<t>[stick the dig output for this NSEC5PROOF RR here.]</t>

</section>
<section anchor="no-data-example-opt-out-in-effect" title="No Data Example, Opt-Out In Effect">

<t>[Sharon has no idea how to make such an example.]</t>

</section>
<section anchor="wildcard-example" title="Wildcard Example">

<t>[Sharon is not sure this is correct. Please check my work!]</t>

<t>Consider a query for a type TXT record for foo.a.example.org.</t>

<t>The server must prove the following facts:</t>

<t><list style="symbols">
  <t>Existence of the TXT record for the wildcard *.c.example.org</t>
  <t>Non-existence of the next closer name foo.c.example.org.</t>
</list></t>

<t>To do this, the server returns:</t>

<t><list style="symbols">
  <t>Signed TXT record for the wildcard at c.example.org.  [Sharon does not
know how to write this text properly, someone else should write this.]</t>
</list></t>

<t>[Dig output here]</t>

<t><list style="symbols">
  <t>NSEC5PROOF RR for foo.c.example.org.  This
  NSEC5PROOF RR must be computed on-the-fly.</t>
</list></t>

<t>[Dig output here]</t>

<t><list style="symbols">
  <t>Signed NSEC5 RR "covering" foo.c.example.org. The NSEC5 hash of
  foo.c.example.org is XXXXXXXXXXXXXXXX and sorts in canonical
  order between the NSEC5 RR's Owner Name and Next Hashed Owner Name.
  NSEC5 RRs are always precomputed.</t>
</list></t>

<t>[Dig output here]</t>

</section>
<section anchor="wildcard-no-data-example" title="Wildcard No Data Example">

<t>[Sharon is not sure this is correct. Please check my work!]</t>

<t>Consider a query for a type MX record for foo.a.example.org.</t>

<t>The server must prove the following facts:</t>

<t><list style="symbols">
  <t>Existence of wildcard at closest encloser
*.a.example.org. for any type other than MX or CNAME.</t>
  <t>Non-existence of the next closer name foo.a.example.org.</t>
</list></t>

<t>To do this, the server returns:</t>

<t><list style="symbols">
  <t>NSEC5PROOF RR for a.example.com.  Per <xref target="precompute"/>, this NSEC5PROOF RR may be precomputed.</t>
</list></t>

<t>[Dig output here]</t>

<t><list style="symbols">
  <t>Signed NSEC5 RR "matching" c.example.org
its with its Wildcard flag set and its CNAME and MX Type Bits cleared.
This NSEC5 RR has its owner name equal to the NSEC5 hash of a.example.org.)
NSEC5 RRs are always precomputed.</t>
</list></t>

<t>[Dig output here]</t>

<t><list style="symbols">
  <t>An NSEC5PROOF RR for foo.a.example.com. This
  NSEC5PROOF RR must be computed on-the-fly.</t>
</list></t>

<t>[Dig output here]</t>

<t><list style="symbols">
  <t>Signed NSEC5 RR "covering" foo.a.example.com. The NSEC5 hash of
  foo.a.example.org is XXXXXXX, and sorts in canonical order between this
  covering NSEC5 RR's Owner Name and Next Hashed Owner Name.
  NSEC5 RRs are always precomputed.</t>
</list></t>

<t>[Dig output here]</t>

</section>
</section>
<section anchor="change-log" title="Change Log">

<t>Note to RFC Editor: if this document does not obsolete an existing
RFC, please remove this appendix before publication as an RFC.</t>

<t><list style='empty'>
  <t>pre 00 - initial version of the document submitted to mailing list only</t>
</list></t>

<t><list style='empty'>
  <t>00 - fix NSEC5KEY rollover mechanism, clarify NSEC5PROOF RDATA,
clarify inputs and outputs for NSEC5 proof and NSEC5 hash
computation.</t>
</list></t>

<t><list style='empty'>
  <t>01 - Add Performance Considerations section.</t>
</list></t>

<t><list style='empty'>
  <t>02 - Add elliptic curve based VRF. Add measurement of response sizes
based on empirical data.</t>
</list></t>

<t><list style='empty'>
  <t>03 - Mention precomputed NSEC5PROOF Values in Performance
Considerations section.</t>
</list></t>

<t><list style='empty'>
  <t>04 - Edit Rationale, How NSEC5 Works, and Security Consideration
sections for clarity.  Edit Zone Signing section, adding
precomputation of NSEC5PROOFs.  Remove RSA-based NSEC5
specification.  Rewrite Performance Considerations and
Implementation Status sections.</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
H4sIAFGbxVgAA+V9a3fbxrXo9/kVc5QPlnpIWg/Lr7RpaUmO1dqSK8pxmiY3
a0iCFGoQYAHQMpP4/va7X/MCQEl2kp5113FXWwoYzGPPfu89e/r9vqrTOkue
6rPRydFhTx+fjeCHHq7qqySv04mpk6k+TvLUZLqY6ZMPaVUn+SRRZjwuk/fy
nZoWk9wsoJtpaWZ1//0kycy7fl4lk8P+LryGbp7q/d29R0qly/KprstVVe/v
7j7Z3VemTMxTfZrXSZkntbqeQ6dJfV2U7/Rb+J80n+uvy2K1VO+ufbP+MQ6k
YH5PdVVPlZoUU2j5VK+qvqkmaaqW6VOldV/XxYT+v1ovymRW8e+irN0fk2Kx
NJOafpezSTKt6nWW2FcLAAO3S/MszROlDMCmKKlz+K+G59VT/deB/oYWTY8Y
Fn81efiwKGF6R98Nzk6P6O8KppDA9F+lWVIV76t3Ru/tHTy8f0hvJ2m9fqpf
l+bK8N/FFLrcO9jVu7vyYJXX5Rq7pL+ThUmzp/pfJh8w+P+Sp5PB5Kd4nqOB
/rrIpuOknAczHV2ZssjjNzTdZ0VVw4s3efo+KSuYUjTzvb09fbRaLADw2GpU
9/Sro9HeQbgC7oEelMk8LXJY8DBY0b3d/f29w3vxkt6MhuGa5jSvv0yqwXg1
SKareEnHA/3aLM20WBarrKiCZR2ni7Qu06JqN6DV+WUhbr8y5Toz+TRa4uP9
/QP4Os1r/aw0+eRKH5fB6o6KLEvmCbQo38VrPA7XuL/76MHuzWucpkua419W
i2l7jbBtL1b/XiXRnq0WAHT/mJY0MoBMs6KcJNEy9g8Pd/VbU1VJqS+TMlzC
C6CnaWOHvhnGs997tHfz7KsrnMZf5vjXAKimtUNHA/3SXJfEOoINMu/TqT6K
X9E6hu8M9AVznVzlRVbM06SKUQ/W86wszPTarD8B23b39x7s9/d2Dx/cuJwa
oPgXQ1Og1ai8KBemBmxBsgcmsbd78OCpdr8P7e/9vb0n/vfBQ//78Z77fbD7
2P5+sHtwEPx+EPx2fT54+MC1P9zbe+B/H7o2D/f9tw8f7rrnjx75bx/vPt6l
36fHA6ao/vty9pTWLULgm6RMZ6kZZ4m+AEooFvr5Kp/UAMdKb39z8bzaodae
A+K/fjdncS+66NO9jPmmlxP93QN48vz09ai/9/hh/yCa5nE6T2GL9Cid56Ze
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
qNNvH8IAAA==

-->

</rfc>

