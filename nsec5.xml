<?xml version="1.0" encoding="us-ascii"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.0.40 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2136 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC2181 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2181.xml">
<!ENTITY RFC2308 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2308.xml">
<!ENTITY RFC4033 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4033.xml">
<!ENTITY RFC4034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4034.xml">
<!ENTITY RFC4035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4035.xml">
<!ENTITY RFC4648 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4648.xml">
<!ENTITY RFC5114 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5114.xml">
<!ENTITY RFC5155 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5155.xml">
<!ENTITY RFC6234 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6234.xml">
<!ENTITY RFC6605 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6605.xml">
<!ENTITY RFC7748 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7748.xml">
<!ENTITY RFC8080 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8080.xml">
<!ENTITY I-D.goldbe-vrf SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.goldbe-vrf.xml">
<!ENTITY RFC6781 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6781.xml">
<!ENTITY RFC7129 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7129.xml">
<!ENTITY RFC7719 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7719.xml">
<!ENTITY I-D.gieben-nsec4 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.gieben-nsec4.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc compact="yes"?>
<?rfc rfcedstyle="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

<rfc ipr="trust200902" docName="draft-vcelak-nsec5-05" category="std">

  <front>
    <title abbrev="NSEC5">NSEC5, DNSSEC Authenticated Denial of Existence</title>

    <author initials="J." surname="Vcelak" fullname="Jan Vcelak">
      <organization>CZ.NIC</organization>
      <address>
        <postal>
          <street>Milesovska 1136/5</street>
          <city>Praha</city>
          <code>130 00</code>
          <country>CZ</country>
        </postal>
        <email>jan.vcelak@nic.cz</email>
      </address>
    </author>
    <author initials="S." surname="Goldberg" fullname="Sharon Goldberg">
      <organization>Boston University</organization>
      <address>
        <postal>
          <street>111 Cummington St, MCS135</street>
          <city>Boston</city>
          <region>MA</region>
          <code>02215</code>
          <country>USA</country>
        </postal>
        <email>goldbe@cs.bu.edu</email>
      </address>
    </author>
    <author initials="D." surname="Papadopoulos" fullname="Dimitrios Papadopoulos">
      <organization>University of Maryland</organization>
      <address>
        <postal>
          <street>8223 Paint Branch Dr</street>
          <city>College Park</city>
          <region>MD</region>
          <code>20740</code>
          <country>USA</country>
        </postal>
        <email>dipapado@umd.edu</email>
      </address>
    </author>
    <author initials="S." surname="Huque" fullname="Shumon Huque">
      <organization>Salesforce</organization>
      <address>
        <postal>
          <street>2550 Wasser Terr</street>
          <city>Herndon</city>
          <region>VA</region>
          <code>20171</code>
          <country>USA</country>
        </postal>
        <email>shuque@gmail.com</email>
      </address>
    </author>
    <author initials="D.C." surname="Lawrence" fullname="David C Lawrence">
      <organization>Akamai Technologies</organization>
      <address>
        <postal>
          <street>150 Broadway</street>
          <city>Boston</city>
          <region>MA</region>
          <code>02142-1054</code>
          <country>USA</country>
        </postal>
        <email>tale@akamai.com</email>
      </address>
    </author>

    <date year="2017"/>

    <area>Internet</area>
    <workgroup>Network Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>The Domain Name System Security Extensions (DNSSEC) introduced the
NSEC resource record (RR) for authenticated denial of existence and
the NSEC3 RR for hashed authenticated denial of existence.  This
document introduces NSEC5 as an alternative mechanism for DNSSEC
authenticated denial of existence.  NSEC5 uses verifiable random
functions (VRFs) to prevent offline enumeration of zone
contents. NSEC5 also protects the integrity of the zone contents even
if an adversary compromises one of the authoritative servers for the
zone.  Integrity is preserved because NSEC5 does not require private
zone-signing keys to be present on all authoritative servers for the
zone, in contrast to DNSSEC online signing schemes like NSEC3 White
Lies.</t>



    </abstract>


    <note title="Ed note">


<t>Text inside square brackets ([]) is additional background
information, answers to frequently asked questions, general musings,
etc.  They will be removed before publication.  This document is being
collaborated on in GitHub at
&lt;https://github.com/fcelda/nsec5-draft&gt;.  The most recent version of
the document, open issues, etc should all be available here.  The
authors gratefully accept pull requests.</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<section anchor="rationale" title="Rationale">

<t>NSEC5 provides an alternative mechanism for authenticated denial of
existence for the DNS Security Extensions (DNSSEC). NSEC5 has two key
security properties.  First, NSEC5 protects the integrity of the zone
contents even if an adversary compromises one of the authoritative
servers for the zone.  Second, NSEC5 prevents offline zone
enumeration, where an adversary makes a small number of online DNS
queries and then processes them offline in order to learn all of the
names in a zone. Zone enumeration can be used to identify routers,
servers or other "things" that could then be targeted in more complex
attacks. An enumerated zone can also be a source of probable email
addresses for spam, or as a "key for multiple WHOIS queries to reveal
registrant data that many registries may have legal obligations to
protect" <xref target="RFC5155"/>.</t>

<t>All other DNSSEC mechanisms for authenticated denial of existence
either fail to preserve integrity against a compromised server, or
fail to prevent offline zone enumeration.</t>

<t>When offline signing with NSEC is used <xref target="RFC4034"/>, an NSEC chain of
all existing domain names in the zone is constructed and signed
offline. The chain is made of resource records (RRs), where each RR
represents two consecutive domain names in canonical order present in
the zone.  The authoritative server proves the non-existence of a name
by presenting a signed NSEC RR which covers the name.  Because the
authoritative server does not need not to know the private
zone-signing key, the integrity of the zone is protected even if the
server is compromised.  However, the NSEC chain allows for easy zone
enumeration: N queries to the server suffice to learn all N names in
the zone (see e.g., <xref target="nmap-nsec-enum"/>, <xref target="nsec3map"/>, and
<xref target="ldns-walk"/>).</t>

<t>When offline signing with NSEC3 is used <xref target="RFC5155"/>, the original
names in the NSEC chain are replaced by their cryptographic
hashes. Offline signing ensures that NSEC3 preserves integrity even if
an authoritative server is compromised. However, offline zone
enumeration is still possible with NSEC3 (see e.g., <xref target="nsec3walker"/>,
<xref target="nsec3gpu"/>), and is part of standard network reconnaissance tools
(e.g., <xref target="nmap-nsec3-enum"/>, <xref target="nsec3map"/>).</t>

<t>When online signing is used, the authoritative server holds the
private zone-signing key and uses this key to synthesize NSEC or NSEC3
responses on the fly (e.g.  NSEC3 White Lies (NSEC3-WL) or
Minimally-Covering NSEC, both described in <xref target="RFC7129"/>).  Because the
synthesized response only contains information about the queried name
(but not about any other name in the zone), offline zone enumeration
is not possible.  However, because the authoritative server holds the
private zone-signing key, integrity is lost if the authoritative
server is compromised.</t>

<texttable>
      <ttcol align='left'>Scheme</ttcol>
      <ttcol align='right'>Integrity vs network attacks?</ttcol>
      <ttcol align='right'>Integrity vs compromised auth. server?</ttcol>
      <ttcol align='right'>Prevents offline zone enumeration?</ttcol>
      <ttcol align='right'>Online crypto?</ttcol>
      <c>Unsigned</c>
      <c>NO</c>
      <c>NO</c>
      <c>YES</c>
      <c>NO</c>
      <c>NSEC</c>
      <c>YES</c>
      <c>YES</c>
      <c>NO</c>
      <c>NO</c>
      <c>NSEC3</c>
      <c>YES</c>
      <c>YES</c>
      <c>NO</c>
      <c>NO</c>
      <c>NSEC3-WL</c>
      <c>YES</c>
      <c>NO</c>
      <c>YES</c>
      <c>YES</c>
      <c>NSEC5</c>
      <c>YES</c>
      <c>YES</c>
      <c>YES</c>
      <c>YES</c>
</texttable>

<t>NSEC5 prevents offline zone enumeration and also protects integrity
even if a zone's authoritative server is compromised.  To do this,
NSEC5 replaces the unkeyed cryptographic hash function used in NSEC3
with a verifiable random function (VRF) <xref target="MRV99"/>.  A VRF is the
public-key version of a keyed cryptographic hash.  Only the holder of
the private VRF key can compute the hash, but anyone with public VRF
key can verify the correctness of the hash.</t>

<t>The public VRF key is distributed in an NSEC5KEY RR, similar to a
DNSKEY RR, and is used to verify NSEC5 hash values.  The private VRF
key is present on all authoritative servers for the zone, and is used
to compute hash values. For every query that elicits a negative
response, the authoritative server hashes the query on the fly using
the private VRF key, and also returns the corresponding precomputed
NSEC5 record(s). In contrast to the online signing approach
<xref target="RFC7129"/>, the private key that is present on all authoritative
servers for NSEC5 cannot be used to modify the zone contents.</t>

<t>Like online signing approaches, NSEC5 requires the authoritative
server to perform online public key cryptographic operations for every
query eliciting a denying response.  This is necessary; <xref target="nsec5"/>
proved that online cryptography is required to prevent offline zone
enumeration while still protecting the integrity of zone contents
against network attacks.</t>

<t>NSEC5 is not intended to replace NSEC or NSEC3. It is an alternative
mechanism for authenticated denial of existence.  This document
specifies NSEC5 based on the FIPS 186-3 P-256 elliptic curve and on
the Ed25519 elliptic curve. A formal cryptographic proof of security
for elliptic curve (EC) NSEC5 is in <xref target="nsec5ecc"/>.</t>

</section>
<section anchor="requirements" title="Requirements">

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
document are to be interpreted as described in <xref target="RFC2119"/>.</t>

</section>
<section anchor="terminology" title="Terminology">

<t>The reader is assumed to be familiar with the basic DNS and DNSSEC
concepts described in <xref target="RFC1034"/>, <xref target="RFC1035"/>, <xref target="RFC4033"/>,
<xref target="RFC4034"/>, and <xref target="RFC4035"/>; subsequent RFCs that update them in
<xref target="RFC2136"/>, <xref target="RFC2181"/>, <xref target="RFC2308"/>, <xref target="RFC5155"/>, and <xref target="RFC7129"/>;
and DNS terms in <xref target="RFC7719"/>.</t>

<t>The reader should also be familiar with verifiable random functions (VRFs)
as defined in <xref target="I-D.goldbe-vrf"/>.</t>

<t>The following terminology is used through this document:</t>

<t><list style="hanging">
  <t hangText='Base32hex:'>
  The "Base 32 Encoding with Extended Hex Alphabet" as specified
in <xref target="RFC4648"/>. The padding characters ("=") are not
used in the NSEC5 specification.</t>
  <t hangText='Base64:'>
  The "Base 64 Encoding" as specified in <xref target="RFC4648"/>.</t>
  <t hangText='QNAME:'>
  The domain name being queried (query name).</t>
  <t hangText='Private NSEC5 key:'>
  The private key for the verifiable random function (VRF).</t>
  <t hangText='Public NSEC5 key:'>
  The public key for the VRF.</t>
  <t hangText='NSEC5 proof:'>
  A VRF proof. The holder of
the private NSEC5 key (e.g., authoritative server) can
compute the NSEC5 proof for an input domain name.
Anyone who knows the public VRF key can verify
that the NSEC5 proof corresponds to the input domain name.</t>
  <t hangText='NSEC5 hash:'>
  A cryptographic digest of an NSEC5 proof. If the NSEC5
proof is known, anyone can compute its corresponding NSEC5 hash.</t>
  <t hangText='NSEC5 algorithm:'>
  A triple of VRF algorithms that 
  compute an NSEC5 proof (VRF_prove),
  verify an NSEC5 proof (VRF_verify), 
  and process an NSEC5 proof to obtain its NSEC5 hash (VRF_proof2hash).</t>
</list></t>

</section>
</section>
<section anchor="backward-compatibility" title="Backward Compatibility">

<t>The specification describes a protocol change that is not backward
compatible with <xref target="RFC4035"/> and <xref target="RFC5155"/>. An NSEC5-unaware resolver
will fail to validate responses introduced by this document.</t>

<t>To prevent NSEC5-unaware resolvers from attempting to validate the
responses, new DNSSEC algorithms identifiers are introduced in
<xref target="iana_considerations"/> which alias existing algorithm numbers. The
zones signed according to this specification MUST use only these
algorithm identifiers, thus NSEC5-unaware resolvers will treat the
zone as insecure.</t>

</section>
<section anchor="how-nsec5-works" title="How NSEC5 Works">

<t>With NSEC5, the original domain name is hashed using a VRF <xref target="I-D.goldbe-vrf"/>
using the following steps:</t>

<t><list style="numbers">
  <t>The domain name is processed using a VRF keyed with the private
  NSEC5 key to obtain the NSEC5 proof.  Anyone who knows the public
  NSEC5 key, normally acquired via an NSEC5KEY RR, can verify that a
  given NSEC5 proof corresponds to a given domain name.</t>
  <t>The NSEC5 proof is then processed using a publicly-computable VRF
  proof-to-hash function to obtain the NSEC5 hash.  The NSEC5 hash can
  be computed by anyone who knows the input NSEC5 proof.</t>
</list></t>

<t>The NSEC5 hash determines the position of a domain name in an NSEC5
chain.</t>

<t>To sign a zone, the private NSEC5 key is used to compute the NSEC5
hashes for each name in the zone. These NSEC5 hashes are sorted in
canonical order <xref target="RFC4034"/>, and each consecutive pair forms an NSEC5
RR.  Each NSEC5 RR is signed offline using the private zone-signing
key.  The resulting signed chain of NSEC5 RRs is provided to all
authoritative servers for the zone, along with the private NSEC5 key.</t>

<t>To prove non-existence of a particular domain name in response to a
query, the server uses the private NSEC5 key to compute the NSEC5
proof and NSEC5 hash corresponding to the queried name.  The server
then identifies the NSEC5 RR that covers the NSEC5 hash, and responds
with this NSEC5 RR and its corresponding RRSIG signature RRset, as
well as a synthesized NSEC5PROOF RR that contains the NSEC5 proof
corresponding to the queried name.</t>

<t>To validate the response, the client verifies the following items:</t>

<t><list style="symbols">
  <t>The client uses the public NSEC5 key, normally acquired from the
NSEC5KEY RR, to verify that the NSEC5 proof in the NSEC5PROOF RR
corresponds to the queried name.</t>
  <t>The client uses the VRF proof-to-hash function to compute the NSEC5
hash from the NSEC5 proof in the NSEC5PROOF RR.  The client verifies
that the NSEC5 hash is covered by the NSEC5 RR.</t>
  <t>The client verifies that the NSEC5 RR is validly signed by the RRSIG
RRset.</t>
</list></t>

</section>
<section anchor="nsec5-algorithms" title="NSEC5 Algorithms">

<t>The algorithms used for NSEC5 authenticated denial are independent of
the algorithms used for DNSSEC signing. An NSEC5 algorithm defines how
the NSEC5 proof and the NSEC5 hash are computed and validated.</t>

<t>The NSEC5 proof corresponding to a name is computed using VRF_prove(), 
as specified in <xref target="I-D.goldbe-vrf"/>.
The input to VRF_prove() is 
a private NSEC5 key followed by
an RR owner name in <xref target="RFC4034"/> canonical wire format.
The output NSEC5 proof is an octet string.</t>

<t>An NSEC5 hash corresponding to a name is computed from 
its NSEC5 proof using VRF_proof2hash(), as specified in <xref target="I-D.goldbe-vrf"/>.
The input to VRF_proof2hash() is 
an NSEC5 proof as an octet string; 
the output NSEC5 hash is an octet string.</t>

<t>An NSEC5 proof for a name is verified using VRF_verify(),  as specified in
<xref target="I-D.goldbe-vrf"/>.
The input is the NSEC5 public key, 
followed by an RR owner name in <xref target="RFC4034"/> canonical wire format,
followed by an NSEC5 proof as an octet string; 
the output is either VALID or INVALID.</t>

<t>This document defines the EC-P256-SHA256 NSEC5 algorithm as follows:</t>

<t><list style="symbols">
  <t>The VRF is the EC-VRF algorithm specified in <xref target="I-D.goldbe-vrf"/>
(Section X) where
the secure hash function Hash is SHA-256 and 
the EC group G is the FIPS 186-3 P-256 curve. 
SHA-256 is specified in <xref target="RFC6234"/>.
The curve parameters are specified in <xref target="FIPS-186-3"/> (Section D.1.2.3)
and <xref target="RFC5114"/> (Section 2.6).</t>
  <t>The public key format to be used in the NSEC5KEY RR is defined in
Section 4 of <xref target="RFC6605"/> and thus is the same as the format used to
store ECDSA public keys in DNSKEY RRs.</t>
</list></t>

<t>This document defines the EC-ED25519-SHA256 NSEC5 algorithm as follows:</t>

<t><list style="symbols">
  <t>The VRF is the EC-VRF algorithm specified in <xref target="I-D.goldbe-vrf"/>
(Section X) where
the secure hash function Hash is SHA-256 and 
the EC group G is the Ed25519 curve. 
SHA-256 is specified in <xref target="RFC6234"/>.
The curve parameters are specified in
<xref target="RFC7748"/> (Section 4.1).</t>
  <t>The public key format to be used in the NSEC5KEY RR is defined in
Section 3 of <xref target="RFC8080"/> and thus is the same as the format used to
store Ed25519 public keys in DNSKEY RRs.</t>
</list></t>

</section>
<section anchor="the-nsec5key-resource-record" title="The NSEC5KEY Resource Record">

<t>The NSEC5KEY RR stores a public NSEC5 key. The key allows clients to
validate an NSEC5 proof sent by a server.</t>

<section anchor="nsec5key-rdata-wire-format" title="NSEC5KEY RDATA Wire Format">

<t>The RDATA for the NSEC5KEY RR is as shown below:</t>

<figure><artwork><![CDATA[
                     1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|   Algorithm   |                  Public Key                   /
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t>Algorithm is a single octet identifying the NSEC5 algorithm.</t>

<t>Public Key is a variable-sized field holding public key material for
NSEC5 proof verification.</t>

</section>
<section anchor="nsec5key-rdata-presentation-format" title="NSEC5KEY RDATA Presentation Format">

<t>The presentation format of the NSEC5KEY RDATA is as follows:</t>

<t>The Algorithm field is represented as an unsigned decimal integer.</t>

<t>The Public Key field is represented in Base64 encoding. Whitespace is
allowed within the Base64 text.</t>

</section>
</section>
<section anchor="the-nsec5-resource-record" title="The NSEC5 Resource Record">

<t>The NSEC5 RR provides authenticated denial of existence for an RRset
or domain name. One NSEC5 RR represents one piece of an NSEC5 chain,
proving existence of the owner name and non-existence of other domain
names in the part of the hashed domain space that is covered until the next
owner name hashed in the RDATA.</t>

<section anchor="nsec5-rdata-wire-format" title="NSEC5 RDATA Wire Format">

<t>The RDATA for the NSEC5 RR is as shown below:</t>

<figure><artwork><![CDATA[
                     1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|            Key Tag            |     Flags     |  Next Length  |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                     Next Hashed Owner Name                    /
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
/                         Type Bit Maps                         /
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t>The Key Tag field contains the key tag value of the NSEC5KEY RR that
validates the NSEC5 RR, in network byte order. The value is computed
from the NSEC5KEY RDATA using the same algorithm used to
compute key tag values for DNSKEY RRs. This algorithm is defined in
<xref target="RFC4034"/>.</t>

<t>The Flags field is a single octet. The meaning of individual bits of
the field is defined in <xref target="nsec5_flags"/>.</t>

<t>The Next Length field is an unsigned single octet specifying the
length of the Next Hashed Owner Name field in octets.</t>

<t>The Next Hashed Owner Name field is a sequence of binary octets. It
contains an NSEC5 hash of the next domain name in the NSEC5 chain.</t>

<t>Type Bit Maps is a variable-sized field encoding RR types present at
the original owner name matching the NSEC5 RR. The format of the field
is equivalent to the format used in the NSEC3 RR, described in
<xref target="RFC5155"/>.</t>

</section>
<section anchor="nsec5_flags" title="NSEC5 Flags Field">

<t>The following one-bit NSEC5 flags are defined:</t>

<figure><artwork><![CDATA[
 0 1 2 3 4 5 6 7
+-+-+-+-+-+-+-+-+
|           |W|O|
+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style='empty'>
  <t>O - Opt-Out flag</t>
</list></t>

<t><list style='empty'>
  <t>W - Wildcard flag</t>
</list></t>

<t>All the other flags are reserved for future use and MUST be zero.</t>

<t>The Opt-Out flag has the same semantics as in NSEC3. The definition
and considerations in <xref target="RFC5155"/> are valid, except that NSEC3 is
replaced by NSEC5.</t>

<t>The Wildcard flag indicates that a wildcard synthesis is possible at
the original domain name level (i.e., there is a wildcard node
immediately descending from the immediate ancestor of the original
domain name).  The purpose of the Wildcard flag is to reduce the
maximum number of RRs required for an authenticated denial of
existence proof from (at most) three to (at most) two, 
as originally described in <xref target="I-D.gieben-nsec4"/>
Section 7.2.1.</t>

</section>
<section anchor="nsec5-rdata-presentation-format" title="NSEC5 RDATA Presentation Format">

<t>The presentation format of the NSEC5 RDATA is as follows:</t>

<t>The Key Tag field is represented as an unsigned decimal integer.</t>

<t>The Flags field is represented as an unsigned decimal integer.</t>

<t>The Next Length field is not represented.</t>

<t>The Next Hashed Owner Name field is represented as a sequence of
case-insensitive Base32hex digits without any whitespace and without
padding.</t>

<t>The Type Bit Maps representation is equivalent to the representation
used in NSEC3 RR, described in <xref target="RFC5155"/>.</t>

</section>
</section>
<section anchor="the-nsec5proof-resource-record" title="The NSEC5PROOF Resource Record">

<t>The NSEC5PROOF record is not to be included in the zone file.  The
NSEC5PROOF record contains the NSEC5 proof, proving the position of
the owner name in an NSEC5 chain.</t>

<section anchor="nsec5proof_rdata" title="NSEC5PROOF RDATA Wire Format">

<t>The RDATA for the NSEC5PROOF RR is shown below:</t>

<figure><artwork><![CDATA[
                     1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|            Key Tag            |        Owner Name Hash        /
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t>Key Tag field contains the key tag value of the NSEC5KEY RR that
validates the NSEC5PROOF RR, in network byte order.</t>

<t>Owner Name Hash is a variable-sized sequence of binary octets encoding
the NSEC5 proof of the owner name of the RR.</t>

</section>
<section anchor="nsec5proof-rdata-presentation-format" title="NSEC5PROOF RDATA Presentation Format">

<t>The presentation format of the NSEC5PROOF RDATA is as follows:</t>

<t>The Key Tag field is represented as an unsigned decimal integer.</t>

<t>The Owner Name Hash is represented in Base64 encoding. Whitespace is
allowed within the Base64 text.</t>

</section>
</section>
<section anchor="nsec5_proofs" title="Types of Authenticated Denial of Existence with NSEC5">

<t>This section summarizes all possible types of authenticated denial of
existence.  For each type the following lists are included:</t>

<t><list style="numbers">
  <t>Facts to prove: the minimum amount of information that an
  authoritative server must provide to a client to assure the client
  that the response content is valid.</t>
  <t>Authoritative server proofs: the names for which the NSEC5PROOF RRs
  are synthesized and added into the response along the NSEC5 RRs
  matching or covering each such name. These records together prove
  the listed facts.</t>
  <t>Validator checks: the individual checks that a validating server is
  required to perform on a response. The response content is
  considered valid only if all of the checks pass.</t>
</list></t>

<t>If NSEC5 is said to match a domain name, the owner name of the NSEC5
RR has to be equivalent to an NSEC5 hash of that domain name. If an
NSEC5 RR is said to cover a domain name, the NSEC5 hash of the domain
name must sort in canonical order between that NSEC5 RR's Owner Name
and Next Hashed Owner Name.</t>

<section anchor="name-error-responses" title="Name Error Responses">

<t>Facts to prove:</t>

<t><list style='empty'>
  <t>Non-existence of RRset that explictly matches the QNAME.  [Shumon, Dave, check this terminology.]</t>
</list></t>

<t><list style='empty'>
  <t>Non-existence of RRset that matches QNAME via wildcard expansion. [Shumon, Dave, check this terminology.]</t>
</list></t>

<t><list style='empty'>
  <t>The QNAME does not fall into a delegation. [Shumon, Dave, check this terminology. "fall into"?]</t>
</list></t>

<t><list style='empty'>
  <t>The QNAME does not fall into a DNAME redirection.</t>
</list></t>

<t>Authoritative server proofs:</t>

<t><list style='empty'>
  <t>NSEC5PROOF for closest encloser and matching NSEC5 RR.</t>
</list></t>

<t><list style='empty'>
  <t>NSEC5PROOF for next closer name and covering NSEC5 RR.</t>
</list></t>

<t>Validator checks:</t>

<t><list style='empty'>
  <t>Closest encloser is in the zone.</t>
</list></t>

<t><list style='empty'>
  <t>The NSEC5 RR matching the closest encloser has its Wildcard flag cleared.</t>
</list></t>

<t><list style='empty'>
  <t>The NSEC5 RR matching the closest encloser does not have NS without SOA in the Type Bit Map.</t>
</list></t>

<t><list style='empty'>
  <t>The NSEC5 RR matching the closest encloser does not have DNAME in
  the Type Bit Map.</t>
</list></t>

<!--> Next closer name is derived correctly.-->

<t><list style='empty'>
  <t>Next closer name is not in the zone.</t>
</list></t>

</section>
<section anchor="no-data-responses" title="No Data Responses">

<t>The processing of a No Data response for DS QTYPE differs if the
Opt-Out is in effect. For DS QTYPE queries, the validator has two
possible checking paths.  The correct path can be simply decided by
inspecting if the NSEC5 RR in the response matches the QNAME.</t>

<t>Note that the Opt-Out is valid only for DS QTYPE queries.</t>

<section anchor="no-data-response-opt-out-not-in-effect" title="No Data Response, Opt-Out Not In Effect">

<t>Facts to prove:</t>

<t><list style='empty'>
  <t>Existence of an RRset explicitly matching the QNAME.</t>
</list></t>

<t><list style='empty'>
  <t>Non-existence of QTYPE RRset matching the QNAME.</t>
</list></t>

<t><list style='empty'>
  <t>Non-existence of CNAME RRset matching the QNAME.</t>
</list></t>

<t>Authoritative server proofs:</t>

<t><list style='empty'>
  <t>NSEC5PROOF for the QNAME and matching NSEC5 RR.</t>
</list></t>

<t>Validator checks:</t>

<t><list style='empty'>
  <t>QNAME is in the zone.</t>
</list></t>

<t><list style='empty'>
  <t>NSEC5 RR matching the QNAME does not have QTYPE in Type Bit Map.</t>
</list></t>

<t><list style='empty'>
  <t>NSEC5 RR matching the QNAME does not have CNAME in Type Bit Map.</t>
</list></t>

</section>
<section anchor="no-data-response-opt-out-in-effect" title="No Data Response, Opt-Out In Effect">

<t>[Sharon has no idea how this works, someone else should check this for correctness!]</t>

<t>Facts to prove:</t>

<t><list style='empty'>
  <t>The delegation is not covered by the NSEC5 chain.</t>
</list></t>

<t>Authoritative server proofs:</t>

<t><list style='empty'>
  <t>NSEC5PROOF for closest provable encloser and matching NSEC5 RR.</t>
</list></t>

<t>Validator checks:</t>

<t><list style='empty'>
  <t>Closest provable encloser is in zone.</t>
</list></t>

<t><list style='empty'>
  <t>Closest provable encloser covers (not matches) the QNAME.  [Sharon says that 
this terminology "covers (not matches)" is really confusing to me.  What does
"covers" mean in the context of a DNS name? Is this defined in some other
RFC? If so, maybe we should point to that other RFC?]</t>
</list></t>

<t><list style='empty'>
  <t>NSEC5 RR matching the closest provable encloser has Opt-Out flag set.</t>
</list></t>

</section>
</section>
<section anchor="wildcard-responses" title="Wildcard Responses">

<t>Facts to prove:</t>

<t><list style='empty'>
  <t>Non-existence of RRset matching the QNAME.</t>
</list></t>

<t><list style='empty'>
  <t>Non-existence of wildcard closer to the QNAME.  [Sharon says: what does "wildcard 
closer to the QNAME" actually mean? Probably there is a better way to say this.]</t>
</list></t>

<t><list style='empty'>
  <t>Existence of the wildcard expansion of the QNAME. [Sharon added this. Check 
it please!]</t>
</list></t>

<t>Authoritative server proofs:</t>

<t><list style='empty'>
  <t>NSEC5PROOF for next closer name and covering NSEC5 RR.</t>
</list></t>

<t><list style='empty'>
  <t>A signed positive response for the wildcard expansion of the QNAME, 
  as specified in <xref target="RFC4035" />. [Sharon says: Guys, please check this, 
  both the language and the pointer to the RFC. I added this based on 
  stuff in that chat window from 3/10/2017.]</t>
</list></t>

<t>Validator checks:</t>

<!--> Next closer name is derived correctly.-->

<t><list style='empty'>
  <t>Next closer name is not in the zone.</t>
</list></t>

<t><list style='empty'>
  <t>[Something here about the positive response. Not sure what.]</t>
</list></t>

</section>
<section anchor="wildcard-no-data-responses" title="Wildcard No Data Responses">

<t>[Sharon says: please check again this section, as I am not sure I understand it!]</t>

<t>Facts to prove:</t>

<t><list style='empty'>
  <t>Non-existence of RRset that explictly matches the QNAME.  [Shumon, Dave, check this terminology.]</t>
</list></t>

<t><list style='empty'>
  <t>Non-existence of QTYPE RRset that matches QNAME via wildcard expansion. [Shumon, Dave, check this terminology.]</t>
</list></t>

<t><list style='empty'>
  <t>Non-existence of CNAME RRset that matches QNAME via wildcard expansion.</t>
</list></t>

<t><list style='empty'>
  <t>No wildcard closer to the QNAME exists.  [Sharon says as before I don't understand
what this means.]</t>
</list></t>

<t>Authoritative server proofs:</t>

<t><list style='empty'>
  <t>NSEC5PROOF for source of synthesis (i.e., wildcard at closest
encloser) and matching NSEC5 RR.</t>
</list></t>

<t><list style='empty'>
  <t>NSEC5PROOF for next closer name and covering NSEC5 RR.</t>
</list></t>

<t>Validator checks:</t>

<t><list style='empty'>
  <t>Source of synthesis matches the QNAME. [Sharon says: again, I'm not sure what 
this means. Are we saying "Source of synthesis matches QNAME via wildcard expansion." ?]</t>
</list></t>

<t><list style='empty'>
  <t>NSEC5 RR matching source of synthesis does not have QTYPE in Type Bit Map.</t>
</list></t>

<t><list style='empty'>
  <t>NSEC5 RR matching source of synthesis does not have CNAME in Type Bit Map.</t>
</list></t>

<!--> Next closer name is derived correctly.-->

<t><list style='empty'>
  <t>Next closer name is not in the zone.</t>
</list></t>

</section>
</section>
<section anchor="authoritative-server-considerations" title="Authoritative Server Considerations">

<section anchor="zone_signing" title="Zone Signing">

<t>Zones using NSEC5 MUST satisfy the same properties as described in
Section 7.1 of <xref target="RFC5155"/>, with NSEC3 replaced by NSEC5. In addition,
the following conditions MUST be satisfied as well:</t>

<t><list style="symbols">
  <t>If the original owner name has a wildcard label immediately
descending from the original owner name, the corresponding NSEC5 RR
MUST have the Wildcard flag set in the Flags field. Otherwise, the
flag MUST be cleared.</t>
  <t>The zone apex MUST include an NSEC5KEY RRset containing a NSEC5
public key allowing verification of the current NSEC5 chain.</t>
</list></t>

<t>The following steps describe one possible method to properly add
required NSEC5 related records into a zone. This is not the only such
existing method.</t>

<t><list style="numbers">
  <t>Select an algorithm for NSEC5.  Generate the public and private NSEC5 keys.</t>
  <t>Add an NSEC5KEY RR into the zone apex containing the public NSEC5 key.</t>
  <t>For each unique original domain name in the zone and each empty
  non-terminal, add an NSEC5 RR. If Opt-Out is used, owner names of
  unsigned delegations MAY be excluded.  <vspace blankLines='1'/>
A. The owner name of the NSEC5 RR is the NSEC5 hash of the
   original owner name encoded in Base32hex without padding,
   prepended as a single label to the zone name.  <vspace blankLines='1'/>
B. Set the Key Tag field to be the key tag corresponding
   to the public NSEC5 key.  <vspace blankLines='1'/>
C. Clear the Flags field. If Opt-Out is being used, set the Opt-Out
   flag. If there is a wildcard label directly descending from the
   original domain name, set the Wildcard flag. Note that the
   wildcard can be an empty non-terminal (i.e., the wildcard synthesis
   does not take effect and therefore the flag is not to be set).  <vspace blankLines='1'/>
D. Set the Next Length field to a value determined by the used
   NSEC5 algorithm. Leave the Next Hashed Owner Name field blank.  <vspace blankLines='1'/>
E. Set the Type Bit Maps field based on the RRsets present at the
   original owner name.</t>
  <t>Sort the set of NSEC5 RRs into canonical order.</t>
  <t>For each NSEC5 RR, set the Next Hashed Owner Name field by using
  the owner name of the next NSEC5 RR in the canonical order. If the
  updated NSEC5 is the last NSEC5 RR in the chain, the owner name of the
  first NSEC5 RR in the chain is used instead.</t>
</list></t>

<t>The NSEC5KEY and NSEC5 RRs MUST have the same class as the zone SOA
RR.  Also the NSEC5 RRs SHOULD have the same TTL value as the SOA
minimum TTL field.</t>

<t>Notice that a use of Opt-Out is not indicated in the zone. This does
not affect the ability of a server to prove insecure delegations. The
Opt-Out MAY be part of the zone-signing tool configuration.</t>

<section anchor="precompute" title="Precomputing Closest Provable Encloser Proofs">

<t>Per <xref target="nsec5_proofs"/>, the worst-case scenario when answering a negative 
query with NSEC5 requires authoritative server to respond with two 
NSEC5PROOF RRs and
two NSEC5 RRs. One pair of NSEC5PROOF and NSEC5
RRs corresponds to the closest provable encloser, and the other pair
corresponds to the next closer name.  The NSEC5PROOF corresponding to
the next closer name MUST be computed on the fly by the authoritative
server when responding to the query. However, the NSEC5PROOF
corresponding to the closest provable encloser MAY be precomputed and
stored as part of zone signing.</t>

<t>Precomputing NSEC5PROOF RRs can halve the number of online
cryptographic computations required when responding to a negative
query. NSEC5PROOF RRs MAY be precomputed as part of zone signing as
follows: For each NSEC5 RR, compute an NSEC5PROOF RR corresponding to
the original owner name of the NSEC5 RR. The content of the
precomputed NSEC5PROOF record MUST be the same as if the record was
computed on the fly when serving the zone.  NSEC5PROOF records are not
part of the zone and SHOULD be stored separately from the zone file.</t>

</section>
</section>
<section anchor="zone-serving" title="Zone Serving">

<t>This specification modifies DNSSEC-enabled DNS responses generated by
authoritative servers. In particular, it replaces use of NSEC or NSEC3
RRs in such responses with NSEC5 RRs and adds NSEC5PROOF RRs.</t>

<t>According to the type of a response, an authoritative server MUST
include NSEC5 RRs in the response, as defined in <xref target="nsec5_proofs"/>. For
each NSEC5 RR in the response, a corresponding RRSIG RRset and an
NSEC5PROOF MUST be added as well. The NSEC5PROOF RR has its owner name
set to the domain name required according to the description in 
<xref target="nsec5_proofs"/>. The
class and TTL of the NSEC5PROOF RR MUST be the same as the class and
TTL value of the corresponding NSEC5 RR. The RDATA payload of the
NSEC5PROOF is set according to the description in
<xref target="nsec5proof_rdata"/>.</t>

<t>Notice that the NSEC5PROOF owner name can be a wildcard (e.g., source
of synthesis proof in wildcard No Data responses). The name also
always matches the domain name required for the proof while the NSEC5
RR may only cover (not match) the name in the proof (e.g., closest
encloser in Name Error responses).</t>

<t>If NSEC5 is used, an answering server MUST use exactly one NSEC5 chain
for one signed zone.</t>

<t>NSEC5 MUST NOT be used in parallel with NSEC, NSEC3, or any other
authenticated denial of existence mechanism that allows for
enumeration of zone contents, as this would defeat a principal
security goal of NSEC5.</t>

<t>Similarly to NSEC3, the owner names of NSEC5 RRs are not represented
in the NSEC5 chain and therefore NSEC5 records deny their own
existence. The desired behavior caused by this paradox is the same as
described in Section 7.2.8 of <xref target="RFC5155"/>.</t>

</section>
<section anchor="nsec5key-rollover-mechanism" title="NSEC5KEY Rollover Mechanism">

<t>Replacement of the NSEC5 key implies generating a new NSEC5 chain. The
NSEC5KEY rollover mechanism is similar to "Pre-Publish Zone Signing
Key Rollover" as specified in <xref target="RFC6781"/>. The NSEC5KEY rollover MUST
be performed as a sequence of the following steps:</t>

<t><list style="numbers">
  <t>A new public NSEC5 key is added into the NSEC5KEY RRset in the zone
  apex.</t>
  <t>The old NSEC5 chain is replaced by a new NSEC5 chain constructed
  using the new key. This replacement MUST happen as a single atomic
  operation; the server MUST NOT be responding with RRs from both the
  new and old chain at the same time.</t>
  <t>The old public key is removed from the NSEC5KEY RRset in the zone
  apex.</t>
</list></t>

<t>The minimum delay between steps 1 and 2 MUST be the time it takes for
the data to propagate to the authoritative servers, plus the TTL value
of the old NSEC5KEY RRset.</t>

<t>The minimum delay between steps 2 and 3 MUST be the time it takes for
the data to propagate to the authoritative servers, plus the maximum
zone TTL value of any of the data in the previous version of the zone.</t>

</section>
<section anchor="secondary-servers" title="Secondary Servers">

<t>This document does not define mechanism to distribute private NSEC5 keys.
See <xref target="keyleak"/> for security considerations for private NSEC5 keys.</t>

</section>
<section anchor="zones-using-unknown-nsec5-algorithms" title="Zones Using Unknown NSEC5 Algorithms">

<t>Zones that are signed with an unknown NSEC5 algorithm or with an
unavailable private NSEC5 key cannot be effectively served. Such zones
SHOULD be rejected when loading and servers SHOULD respond with
RCODE=2 (Server failure) when handling queries that would fall under
such zones.</t>

</section>
<section anchor="dynamic-updates" title="Dynamic Updates">

<t>A zone signed using NSEC5 MAY accept dynamic updates <xref target="RFC2136"/>.  The
changes to the zone MUST be performed in a way that ensures that the
zone satisfies the properties specified in <xref target="zone_signing"/> at any
time.  The process described in <xref target="RFC5155"/> Section 7.5 describes how
to handle the issues surrounding the handling of empty non-terminals
as well as Opt-Out.</t>

<t>It is RECOMMENDED that the server rejects all updates containing
changes to the NSEC5 chain and its related RRSIG RRs, and performs
itself any required alternations of the NSEC5 chain induced by the
update.  Alternatively, the server MUST verify that all the properties
are satisfied prior to performing the update atomically.</t>

</section>
</section>
<section anchor="resolver-considerations" title="Resolver Considerations">

<t>The same considerations as described in Section 9 of <xref target="RFC5155"/> for
NSEC3 apply to NSEC5. In addition, as NSEC5 RRs can be validated only
with appropriate NSEC5PROOF RRs, the NSEC5PROOF RRs MUST be all
together cached and included in responses with NSEC5 RRs.</t>

</section>
<section anchor="validator-considerations" title="Validator Considerations">

<section anchor="validating-responses" title="Validating Responses">

<t>The validator MUST ignore NSEC5 RRs with Flags field values other than
the ones defined in <xref target="nsec5_flags"/>.</t>

<t>The validator MAY treat responses as bogus if the response contains
NSEC5 RRs that refer to a different NSEC5KEY.</t>

<t>According to a type of a response, the validator MUST verify all
conditions defined in <xref target="nsec5_proofs"/>. Prior to making decision based
on the content of NSEC5 RRs in a response, the NSEC5 RRs MUST be
validated.</t>

<t>To validate a denial of existence, public NSEC5 keys for the zone are
required in addition to DNSSEC public keys. Similarly to DNSKEY RRs,
the NSEC5KEY RRs are present at the zone apex.</t>

<t>The NSEC5 RR is validated as follows:</t>

<t><list style="numbers">
  <t>Select a correct public NSEC5 key to validate the NSEC5 proof. The
  Key Tag value of the NSEC5PROOF RR must match with the key tag value
  computed from the NSEC5KEY RDATA.</t>
  <t>Validate the NSEC5 proof present in the NSEC5PROOF Owner Name Hash
  field using the public NSEC5 key. If there are multiple NSEC5KEY RRs
  matching the key tag, at least one of the keys must validate the
  NSEC5 proof.</t>
  <t>Compute the NSEC5 hash value from the NSEC5 proof and check if the
  response contains NSEC5 RR matching or covering the computed NSEC5
  hash.  The TTL values of the NSEC5 and NSEC5PROOF RRs must be the
  same.</t>
  <t>Validate the signature on the NSEC5 RR.</t>
</list></t>

<t>If the NSEC5 RR fails to validate, it MUST be ignored. If some of the
conditions required for an NSEC5 proof are not satisfied, the response
MUST be treated as bogus.</t>

<t>Notice that determining the closest encloser and next closer name in
NSEC5 is easier than in NSEC3. NSEC5 and NSEC5PROOF RRs are always
present in pairs in responses and the original owner name of the NSEC5
RR matches the owner name of the NSEC5PROOF RR.</t>

</section>
<section anchor="validating-referrals-to-unsigned-subzones" title="Validating Referrals to Unsigned Subzones">

<t>The same considerations as defined in Section 8.9 of <xref target="RFC5155"/> for
NSEC3 apply to NSEC5.</t>

</section>
<section anchor="responses-with-unknown-nsec5-algorithms" title="Responses With Unknown NSEC5 Algorithms">

<t>A validator MUST ignore NSEC5KEY RRs with unknown NSEC5
algorithms. The practical result of this is that zones signed with
unknown algorithms will be considered bogus.</t>

</section>
</section>
<section anchor="special-considerations" title="Special Considerations">

<section anchor="transition-mechanism" title="Transition Mechanism">

<t>[TODO: The following information will be covered.]</t>

<t><list style="symbols">
  <t>Transition to NSEC5 from NSEC/NSEC3</t>
  <t>Transition from NSEC5 to NSEC/NSEC3</t>
  <t>Transition to new NSEC5 algorithms</t>
</list></t>

</section>
<section anchor="private-nsec5-keys" title="Private NSEC5 keys">

<t>This document does not define a format to store private NSEC5
keys. Use of a standardized and adopted format is RECOMMENDED.</t>

<t>The private NSEC5 key MAY be shared between multiple zones, however a
separate key is RECOMMENDED for each zone.</t>

</section>
<section anchor="domain-name-length-restrictions" title="Domain Name Length Restrictions">

<t>NSEC5 creates additional restrictions on domain name lengths. In
particular, zones with names that, when converted into hashed owner
names, exceed the 255 octet length limit imposed by <xref target="RFC1035"/> cannot
use this specification.</t>

<t>The actual maximum length of a domain name depends on the length of
the zone name and the NSEC5 algorithm used.</t>

<t>All NSEC5 algorithms defined in this document use 256-bit NSEC5 hash
values.  Such a value can be encoded in 52 characters in Base32hex
without padding.  When constructing the NSEC5 RR owner name, the
encoded hash is prepended to the name of the zone as a single label
which includes the length field of a single octet.  The maximum length
of the zone name in wire format using the 256-bit hash is therefore
202 octets (255 - 53).</t>

</section>
</section>
<section anchor="implementation-status" title="Implementation Status">

<t>NSEC5 has been implemented for the Knot DNS authoritative server
(version 1.6.4) and the Unbound recursive server (version 1.5.9).  The
implementations did not introduce additional library dependencies; all
cryptographic primitives are already present in OpenSSL v1.0.2j, which
is used by both implementations.  The implementations support the full
spectrum of negative responses, (i.e., NXDOMAIN, NODATA, Wildcard,
Wildcard NODATA, and unsigned delegation) using the EC-P256-SHA256
algorithm. The code is deliberately modular, so that the
EC-ED25519-SHA256 algorithm could be implemented by using the Ed25519
elliptic curve <xref target="RFC8080"/> as a drop-in replacement for the P256
elliptic curve.  The authoritative server implements the optimization
from <xref target="precompute"/> to precompute the NSEC5PROOF RRs matching each
NSEC5 record.</t>

</section>
<section anchor="performance-considerations" title="Performance Considerations">

<t>The performance of NSEC5 has been evaluated in <xref target="nsec5ecc"/>.</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<section anchor="zea" title="Zone Enumeration Attacks">

<t>NSEC5 is robust to zone enumeration via offline dictionary attacks by
any attacker that does not know the private NSEC5 key. Without the
private NSEC5 key, that attacker cannot compute the NSEC5 proof that
corresponds to a given domain name.  The only way it can learn the
NSEC5 proof value for a domain name is by querying the authoritative
server for that name. Without the NSEC5 proof value, the attacker
cannot learn the NSEC5 hash value. Thus, even an attacker that
collects the entire chain of NSEC5 RR for a zone cannot use offline
attacks to "reverse" that NSEC5 hash values in these NSEC5 RR and thus
learn which names are present in the zone.  A formal cryptographic
proof of this property is in <xref target="nsec5"/> and <xref target="nsec5ecc"/>.</t>

</section>
<section anchor="keyleak" title="Compromise of the Private NSEC5 Key">

<t>NSEC5 requires authoritative servers to hold the private NSEC5 key,
but not the private zone-signing keys or the private key-signing keys
for the zone.</t>

<t>The private NSEC5 key cannot be used to modify zone contents, because
zone contents are signed using the private zone-signing key.  As such,
a compromise of the private NSEC5 key does not compromise the
integrity of the zone.  An adversary that learns the private NSEC5 key
can, however, perform offline zone-enumeration attacks.  For this
reason, the private NSEC5 key need only be as secure as the DNSSEC
records whose privacy (against zone enumeration) is being protected by
NSEC5.  A formal cryptographic proof of this property is in <xref target="nsec5"/>
and <xref target="nsec5ecc"/>.</t>

<t>To preserve this property of NSEC5, the private NSEC5 key MUST be
different from the private zone-signing keys or key-signing keys for
the zone.</t>

</section>
<section anchor="keylen" title="Key Length Considerations">

<t>The NSEC5 key must be long enough to withstand attacks for as long as
the privacy of the zone contents is important. Even if the NSEC5 key
is rolled frequently, its length cannot be too short, because zone
privacy may be important for a period of time longer than the lifetime
of the key.  For example, an attacker might collect the entire chain
of NSEC5 RR for the zone over one short period, and then, later (even
after the NSEC5 key expires) perform an offline dictionary attack that
attempts to reverse the NSEC5 hash values present in the NSEC5 RRs.
This is in contrast to zone-signing and key-signing keys used in
DNSSEC; these keys, which ensure the authenticity and integrity of the
zone contents, need to remain secure only during their lifetime.</t>

</section>
<section anchor="hashcol" title="NSEC5 Hash Collisions">

<t>If the NSEC5 hash of a QNAME collides with the NSEC5 hash of the owner
name of an NSEC5 RR, it will be impossible to prove the non-existence
of the colliding QNAME. However, the NSEC5 VRFs ensure that obtaining
such a collision is as difficult as obtaining a collision in the
SHA-256 hash function, requiring approximately 2^128 effort. Note that
DNSSEC already relies on the assumption that a cryptographic hash
function is collision-resistant, since these hash functions are used
for generating and validating signatures and DS RRs. See also the
discussion on key lengths in <xref target="nsec5"/>.</t>

</section>
</section>
<section anchor="iana_considerations" title="IANA Considerations">

<t>This document updates the IANA registry "Domain Name System (DNS)
Parameters" in subregistry "Resource Record (RR) TYPEs", by defining
the following new RR types:</t>

<t><list style='empty'>
  <t>NSEC5KEY   value TBD.</t>
</list></t>

<t><list style='empty'>
  <t>NSEC5      value TBD.</t>
</list></t>

<t><list style='empty'>
  <t>NSEC5PROOF value TBD.</t>
</list></t>

<t>This document creates a new IANA registry for NSEC5 algorithms.  This
registry is named "DNSSEC NSEC5 Algorithms". The initial content of
the registry is:</t>

<t><list style='empty'>
  <t>0     is Reserved.</t>
</list></t>

<t><list style='empty'>
  <t>1     is EC-P256-SHA256.</t>
</list></t>

<t><list style='empty'>
  <t>2     is EC-ED25519-SHA256.</t>
</list></t>

<t><list style='empty'>
  <t>3-255 is Available for assignment.</t>
</list></t>

<t>This document updates the IANA registry "DNS Security Algorithm
Numbers" by defining following aliases:</t>

<t><list style='empty'>
  <t>TBD is NSEC5-ECDSAP256SHA256 alias for ECDSAP256SHA256 (13).</t>
</list></t>

<t><list style='empty'>
  <t>TBD is NSEC5-ED25519, alias for ED25519 (15).</t>
</list></t>

</section>
<section anchor="contributors" title="Contributors">

<t>This document would not be possible without help of
Moni Naor (Weizmann Institute),
Sachin Vasant (Cisco Systems),
Leonid Reyzin (Boston University), and
Asaf Ziv (Weizmann Institute)
who contributed to the design of NSEC5.
Ondrej Sury (CZ.NIC Labs), and
Duane Wessels (Verisign Labs)
provided advice on the implementation of NSEC5, and assisted with
evaluating its performance.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1034;
&RFC1035;
&RFC2119;
&RFC2136;
&RFC2181;
&RFC2308;
&RFC4033;
&RFC4034;
&RFC4035;
&RFC4648;
&RFC5114;
&RFC5155;
&RFC6234;
&RFC6605;
&RFC7748;
&RFC8080;
&I-D.goldbe-vrf;
<reference anchor="FIPS-186-3" >
  <front>
    <title>Digital Signature Standard (DSS)</title>
    <author >
      <organization>National Institute for Standards and Technology</organization>
    </author>
    <date year="2009" month="June"/>
  </front>
  <seriesInfo name="FIPS" value="PUB 186-3"/>
</reference>


    </references>

    <references title='Informative References'>

&RFC6781;
&RFC7129;
&RFC7719;
&I-D.gieben-nsec4;
<reference anchor="nsec5" target="https://eprint.iacr.org/2014/582.pdf">
  <front>
    <title>NSEC5: Provably Preventing DNSSEC Zone Enumeration</title>
    <author initials="S." surname="Goldberg">
      <organization></organization>
    </author>
    <author initials="M." surname="Naor">
      <organization></organization>
    </author>
    <author initials="D." surname="Papadopoulos">
      <organization></organization>
    </author>
    <author initials="L." surname="Reyzin">
      <organization></organization>
    </author>
    <author initials="S." surname="Vasant">
      <organization></organization>
    </author>
    <author initials="A." surname="Ziv">
      <organization></organization>
    </author>
    <date year="2014" month="July"/>
  </front>
  <seriesInfo name="in" value="NDSS'15"/>
</reference>
<reference anchor="nsec5ecc" target="https://eprint.iacr.org/2017/099.pdf">
  <front>
    <title>Can NSEC5 be Practical for DNSSEC Deployments?</title>
    <author initials="D." surname="Papadopoulos">
      <organization></organization>
    </author>
    <author initials="D." surname="Wessels">
      <organization></organization>
    </author>
    <author initials="S." surname="Huque">
      <organization></organization>
    </author>
    <author initials="J." surname="Vcelak">
      <organization></organization>
    </author>
    <author initials="M." surname="Naor">
      <organization></organization>
    </author>
    <author initials="L." surname="Reyzin">
      <organization></organization>
    </author>
    <author initials="S." surname="Goldberg">
      <organization></organization>
    </author>
    <date year="2017" month="February"/>
  </front>
  <seriesInfo name="in" value="ePrint Cryptology Archive 2017/099"/>
</reference>
<reference anchor="nsec3gpu" >
  <front>
    <title>GPU-Based NSEC3 Hash Breaking</title>
    <author initials="M." surname="Wander">
      <organization></organization>
    </author>
    <author initials="L." surname="Schwittmann">
      <organization></organization>
    </author>
    <author initials="C." surname="Boelmann">
      <organization></organization>
    </author>
    <author initials="T." surname="Weis">
      <organization></organization>
    </author>
    <date year="2014"/>
  </front>
  <seriesInfo name="in" value="IEEE Symp. Network Computing and Applications (NCA)"/>
</reference>
<reference anchor="nsec3walker" target="http://dnscurve.org/nsec3walker.html">
  <front>
    <title>Nsec3 walker</title>
    <author initials="D.J." surname="Bernstein">
      <organization></organization>
    </author>
    <date year="2011"/>
  </front>
</reference>
<reference anchor="nmap-nsec-enum" target="https://nmap.org/nsedoc/scripts/dns-nsec-enum.html">
  <front>
    <title>nmap: dns-nsec-enum</title>
    <author initials="J.R." surname="Bond">
      <organization></organization>
    </author>
    <date year="2011"/>
  </front>
</reference>
<reference anchor="nmap-nsec3-enum" target="https://nmap.org/nsedoc/scripts/dns-nsec3-enum.html">
  <front>
    <title>nmap: dns-nsec3-enum</title>
    <author initials="A." surname="Nikolic">
      <organization></organization>
    </author>
    <author initials="J.R." surname="Bond">
      <organization></organization>
    </author>
    <date year="2011"/>
  </front>
</reference>
<reference anchor="nsec3map" target="https://github.com/anonion0/nsec3map.">
  <front>
    <title>nsec3map with John the Ripper plugin</title>
    <author >
      <organization>anonion0</organization>
    </author>
    <date year="2015"/>
  </front>
</reference>
<reference anchor="ldns-walk" target="http://git.nlnetlabs.nl/ldns/tree/examples/ldns-walk.c">
  <front>
    <title>ldns</title>
    <author >
      <organization>NLNetLabs</organization>
    </author>
    <date year="2015"/>
  </front>
</reference>
<reference anchor="MRV99" >
  <front>
    <title>Verifiable Random Functions</title>
    <author initials="S." surname="Michali">
      <organization></organization>
    </author>
    <author initials="M." surname="Rabin">
      <organization></organization>
    </author>
    <author initials="S." surname="Vadhan">
      <organization></organization>
    </author>
    <date year="1999"/>
  </front>
  <seriesInfo name="in" value="FOCS"/>
</reference>


    </references>


<section anchor="examples" title="Examples">

<t>We use small DNS zone with three names and four types (SOA, NS, A, and TXT)
to illustrate how denying responses are handled with NSEC5.  For brevity,
the class is not shown (defaults to IN) and the SOA record is shortened,
resulting in the following zone file:</t>

<figure><artwork><![CDATA[
example.org.        SOA ( ... )  
example.org.        NS  a.example.org

a.example.org.      A 192.0.2.1  
c.example.org.      A 192.0.2.2  

c.example.org.      TXT "c record"  

d.example.org.      NS ns1.d.example.org

ns1.d.example.org.  A 192.0.2.4

g.example.org.      A 192.0.2.1  
g.example.org.      TXT "g record"

*.a.example.org.    TXT "wildcard record"
]]></artwork></figure>

<t>Next we present example responses. All cryptographic values are
shortened as indicated by "&#8230;" and ADDITIONAL sections have been
removed.</t>

<section anchor="name-error-example" title="Name Error Example">

<t>Consider a query for a type A record for a.b.c.example.org.</t>

<t>The server must prove the following facts:</t>

<t><list style="symbols">
  <t>Existence of closest encloser c.example.org.</t>
  <t>Non-existence of wildcard at closest encloser *.c.example.org.</t>
  <t>Non-existence of next closer b.c.example.org.</t>
</list></t>

<!-- tale should figure out the right way to keep this on one page -->
<t>To do this, the server returns:</t>

<t>;; -&#187;HEADER&#171;- opcode: QUERY; status: NXDOMAIN; id: 5937<vspace />
;; QUESTION SECTION:<vspace />
;; a.b.c.example.org.           IN      A</t>

<t>;; AUTHORITY SECTION:<vspace />
example.org.         3600 IN SOA a.example.org. hostmaster.example.org. (<vspace />
                          2010111214 21600 3600 604800 86400 )</t>

<t>example.org.         3600 IN RRSIG  SOA 16 2 3600 (<vspace />
        20170412024301 20170313024301 5137 example.org. rT231b1rH&#8230; )</t>

<t><list style="symbols">
  <t>This is an NSEC5PROOF RR for c.example.com.
The owner name of this NSEC5PROOF RR is c.example.com and the RDATA is
the NSEC5 proof corresponding to c.example.com. Per <xref target="precompute"/>, this
NSEC5PROOF RR may be precomputed.</t>
</list></t>

<t>c.example.org.      86400 IN NSEC5PROOF 48566 Amgn22zUiZ9JVyaT&#8230;</t>

<t><list style="symbols">
  <t>This is as signed NSEC5 RR "matching" c.example.org its with
Wildcard flag cleared.  The NSEC5 RR has its owner name equal to the
NSEC5 hash of c.example.org, which is O4K89V.  NSEC5 RRs are always
precomputed.</t>
</list></t>

<t>o4k89v.example.org. 86400 IN NSEC5   48566 0 0O49PI A TXT RRSIG<vspace />
o4k89v.example.org. 86400 IN RRSIG   NSEC5 16 3 86400 (<vspace />
    20170412024301 20170313024301 5137 example.org. zDNTSMQNlz&#8230; )</t>

<t><list style="symbols">
  <t>This is an NSEC5PROOF RR for b.c.example.org.  This
NSEC5PROOF RR must be computed on-the-fly.</t>
</list></t>

<t>b.c.example.org.    86400 IN NSEC5PROOF 48566 AuvvJqbUcEs8sCpY&#8230;</t>

<t><list style="symbols">
  <t>This is a signed  NSEC5 RR "covering" b.c.example.org.
The NSEC5 hash of b.c.example.org, which is AO5OF,
sorts in canonical order between the
"covering" NSEC5 RR's Owner Name and Next Hashed Owner Name.</t>
</list></t>

<t>0o49pi.example.org. 86400 IN NSEC5      48566 0 BAPROH (
    NS SOA RRSIG DNSKEY NSEC5KEY )</t>

<t>0o49pi.example.org. 86400 IN RRSIG   NSEC5 16 3 86400 (
    20170412024301 20170313024301 5137 example.org. 4HT1uj1YlMzO</t>

<t>[NOTE: ALSO THIS EXAMPLE DOESN'T DISCUSS CNAME AND DNAME. SOMEONE
MIGHT WANT TO ADD.]</t>

</section>
<section anchor="no-data-example-opt-out-not-in-effect" title="No Data Example, Opt-Out Not In Effect">

<t>Consider a query for a type MX record for c.example.org.</t>

<t>The server must prove the following facts:</t>

<t><list style="symbols">
  <t>Existence of c.example.org. for any type other than MX or CNAME</t>
</list></t>

<t>To do this, the server returns:</t>

<t>;; -&#187;HEADER&#171;- opcode: QUERY; status: NOERROR; id: 38781</t>

<t>;; QUESTION SECTION:
;; c.example.org.               IN      MX</t>

<t>;; AUTHORITY SECTION:
example.org.            3600    IN      SOA     a.example.org. hostmaster.example.org. 2010111214 21600 3600 604800 86400</t>

<t>example.org.            3600    IN      RRSIG   SOA 16 2 3600 20170412024301 20170313024301 5137 example.org. /rT231b1rH/p</t>

<t><list style="symbols">
  <t>This is an NSEC5PROOF RR for c.example.com.    Per <xref target="precompute"/>, this
NSEC5PROOF RR may be precomputed.</t>
</list></t>

<t>c.example.org.          86400   IN      NSEC5PROOF      48566 Amgn22zUiZ9JVyaT</t>

<t><list style="symbols">
  <t>This is a signed NSEC5 RR "matching" c.example.org
with CNAME and MX Type Bits cleared. This NSEC5 RR has its owner
name equal to the NSEC5 hash of c.example.org.  NSEC5 RR are always precomputed.</t>
</list></t>

<t>o4k89v.example.org. 86400 IN      NSEC5   48566 0 0O49PI A TXT RRSIG</t>

<t>o4k89v.example.org. 86400 IN      RRSIG   NSEC5 16 3 86400 20170412024301 20170313024301 5137 example.org. zDNTSMQNlz/J</t>

</section>
<section anchor="no-data-example-opt-out-in-effect" title="No Data Example, Opt-Out In Effect">

<t>[Dimitris: This case separation reads kind of awkward. I would rather rename this section to Delegation to Unisgned Opt-out zone and the previous to simply No Data]</t>

<t>Consider a query for a type A record for foo.d.example.org.</t>

<t>The server must prove the following facts:</t>

<t><list style="symbols">
  <t>Existence of closest provable encloser example.org</t>
  <t>Non-existence of next closer d.example.org</t>
  <t>Opt-out bit is set in the closest provable encloser NSEC5 record</t>
</list></t>

<t>To do this, the server returns:</t>

<t>;; -&#187;HEADER&#171;- opcode: QUERY; status: NOERROR; id: 45866</t>

<t>;; QUESTION SECTION:
;; foo.d.example.org.           IN      A</t>

<t>;; AUTHORITY SECTION:
d.example.org.          3600    IN      NS      ns1.d.example.org.</t>

<t><list style="symbols">
  <t>This is an NSEC5PROOF RR for example.com.    Per <xref target="precompute"/>, this
NSEC5PROOF RR may be precomputed.</t>
</list></t>

<t>example.org.            86400   IN          NSEC5PROOF      48566 AjwsPCJZ8zH/D0Tr</t>

<t><list style="symbols">
  <t>This is a signed NSEC5 RR "matching" example.org. This NSEC5 RR has its owner
name equal to the NSEC5 hash of example.org.  NSEC5 RR are always precomputed.</t>
</list></t>

<t>0o49pi.example.org. 86400       IN      NSEC5   48566 0 BAPROH NS SOA RRSIG DNSKEY NSEC5KEY</t>

<t>0o49pi.example.org. 86400       IN      RRSIG   NSEC5 16 3 86400 20170412034216 20170313034216 5137 example.org. 4HT1uj1YlMzO</t>

<t><list style="symbols">
  <t>This is an NSEC5PROOF RR for d.example.org.  This
NSEC5PROOF RR must be computed on-the-fly.</t>
</list></t>

<t>d.example.org.          86400   IN      NSEC5PROOF      48566 A9FpmeH79q7g6VNW</t>

<t><list style="symbols">
  <t>This is a signed  NSEC5 RR "covering" d.example.org with its Opt-out bit set.
The NSEC5 hash of d.example.org, which is BLE8LR,
sorts in canonical order between the
"covering" NSEC5 RR's Owner Name and Next Hashed Owner Name.</t>
</list></t>

<t>baproh.example.org. 86400 IN      NSEC5   48566 1 JQBMG4 A TXT RRSIG</t>

<t>baproh.example.org. 86400 IN      RRSIG   NSEC5 16 3 86400 20170412024301 20170313024301 5137 example.org. fjTcoRKgdML1</t>

</section>
<section anchor="wildcard-example" title="Wildcard Example">

<t>[Sharon is not sure this is correct. Please check my work!]</t>

<t>Consider a query for a type TXT record for foo.a.example.org.</t>

<t>The server must prove the following facts:</t>

<t><list style="symbols">
  <t>Existence of the TXT record for the wildcard *.a.example.org</t>
  <t>Non-existence of the next closer name foo.a.example.org.</t>
</list></t>

<t>To do this, the server returns:</t>

<t>;; -&#187;HEADER&#171;- opcode: QUERY; status: NOERROR; id: 53731</t>

<t>;; QUESTION SECTION:
;; foo.a.example.org.           IN      TXT</t>

<t><list style="symbols">
  <t>This is a signed TXT record for the wildcard below a.example.org (number of labels is set to 3 in the RRSIG record).</t>
</list></t>

<t>;; ANSWER SECTION:
foo.a.example.org.      3600    IN      TXT     "wildcard record"</t>

<t>foo.a.example.org.      3600    IN      RRSIG   TXT 16 3 3600 20170412024301 20170313024301 5137 example.org. aeaLgZ8sk+98</t>

<t>;; AUTHORITY SECTION:
example.org.            3600    IN      NS      a.example.org.</t>

<t>example.org.            3600    IN      RRSIG   NS 16 2 3600 20170412024301 20170313024301 5137 example.org. 8zuN0h2x5WyF</t>

<t><list style="symbols">
  <t>NSEC5PROOF RR for foo.a.example.org.  This
  NSEC5PROOF RR must be computed on-the-fly.</t>
</list></t>

<t>foo.a.example.org.      86400   IN      NSEC5PROOF      48566 AjqF5FGGVso40Lda</t>

<t><list style="symbols">
  <t>Signed NSEC5 RR "covering" foo.a.example.org. The NSEC5 hash of
  foo.a.example.org is FORDMO and sorts in canonical
  order between the NSEC5 RR's Owner Name and Next Hashed Owner Name.
  NSEC5 RRs are always precomputed.</t>
</list></t>

<t>baproh.example.org. 86400 IN      NSEC5   48566 1 JQBMG4 A TXT RRSIG
baproh.example.org. 86400 IN      RRSIG   NSEC5 16 3 86400 20170412024301 20170313024301 5137 example.org. fjTcoRKgdML1</t>

</section>
<section anchor="wildcard-no-data-example" title="Wildcard No Data Example">

<t>[Sharon is not sure this is correct. Please check my work!]</t>

<t>Consider a query for a type MX record for foo.a.example.org.</t>

<t>The server must prove the following facts:</t>

<t><list style="symbols">
  <t>Existence of wildcard at closest encloser
*.a.example.org. for any type other than MX or CNAME.</t>
  <t>Non-existence of the next closer name foo.a.example.org.</t>
</list></t>

<t>To do this, the server returns:</t>

<t>;; -&#187;HEADER&#171;- opcode: QUERY; status: NOERROR; id: 17332</t>

<t>;; QUESTION SECTION:
;; foo.a.example.org.           IN      MX</t>

<t>;; AUTHORITY SECTION:
example.org.            3600    IN      SOA     a.example.org. hostmaster.example.org. 2010111214 21600 3600 604800 86400</t>

<t>example.org.            3600    IN      RRSIG   SOA 16 2 3600 20170412024301 20170313024301 5137 example.org. /rT231b1rH/p</t>

<t><list style="symbols">
  <t>This is an NSEC5PROOF RR for *.a.example.com.  Per <xref target="precompute"/>, this NSEC5PROOF RR may be precomputed.</t>
</list></t>

<t>*.a.example.org.        86400   IN      NSEC5PROOF      48566 Aq38RWWPhbs/vtih</t>

<t><list style="symbols">
  <t>This is a s igned NSEC5 RR "matching" *.a.example.org with its CNAME and MX Type Bits cleared.
This NSEC5 RR has its owner name equal to the NSEC5 hash of *.a.example.org.
NSEC5 RRs are always precomputed.</t>
</list></t>

<t>mpu6c4.example.org. 86400 IN      NSEC5   48566 0 O4K89V TXT RRSIG</t>

<t>mpu6c4.example.org. 86400 IN      RRSIG   NSEC5 16 3 86400 20170412024301 20170313024301 5137 example.org. m3I75ttcWwVC</t>

<t><list style="symbols">
  <t>An NSEC5PROOF RR for foo.a.example.com. This
  NSEC5PROOF RR must be computed on-the-fly.</t>
</list></t>

<t>foo.a.example.org.      86400   IN      NSEC5PROOF      48566 AjqF5FGGVso40Lda</t>

<t><list style="symbols">
  <t>This is a signed NSEC5 RR "covering" foo.a.example.org. The NSEC5 hash of
  foo.a.example.org is FORDMO, and sorts in canonical order between this
  covering NSEC5 RR's Owner Name and Next Hashed Owner Name.
  NSEC5 RRs are always precomputed.</t>
</list></t>

<t>baproh.example.org. 86400 IN      NSEC5   48566 1 JQBMG4 A TXT RRSIG</t>

<t>baproh.example.org. 86400 IN      RRSIG   NSEC5 16 3 86400 20170412024301 20170313024301 5137 example.org. fjTcoRKgdML1</t>

</section>
</section>
<section anchor="change-log" title="Change Log">

<t>Note to RFC Editor: if this document does not obsolete an existing
RFC, please remove this appendix before publication as an RFC.</t>

<t><list style='empty'>
  <t>pre 00 - initial version of the document submitted to mailing list only</t>
</list></t>

<t><list style='empty'>
  <t>00 - fix NSEC5KEY rollover mechanism, clarify NSEC5PROOF RDATA,
clarify inputs and outputs for NSEC5 proof and NSEC5 hash
computation.</t>
</list></t>

<t><list style='empty'>
  <t>01 - Add Performance Considerations section.</t>
</list></t>

<t><list style='empty'>
  <t>02 - Add elliptic curve based VRF. Add measurement of response sizes
based on empirical data.</t>
</list></t>

<t><list style='empty'>
  <t>03 - Mention precomputed NSEC5PROOF Values in Performance
Considerations section.</t>
</list></t>

<t><list style='empty'>
  <t>04 - Edit Rationale, How NSEC5 Works, and Security Consideration
sections for clarity.  Edit Zone Signing section, adding
precomputation of NSEC5PROOFs.  Remove RSA-based NSEC5
specification.  Rewrite Performance Considerations and
Implementation Status sections.</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
H4sIAMzHxlgAA+19a3fbxrXo9/kVc5QPlnJIWiQlWVbatLQkx0otyRVlu0nb
mwWSEIWYBBgAlCynvr/97te8AJCSHee2656rrsYSMJjHnv3ee/a0221VJuUs
PtBnw+PD3ZY+OhvCL3qwLK/jtEzGURlP9FGcJtFMZ1f6+H1SlHE6jlU0GuXx
jXynJtk4jebQzSSPrsr2zTieRe/aaRGPd9vb8Bq6OdC97e4TpZJFfqDLfFmU
ve3tp9s9FeVxdKBP0jLO07hUt1PoNC5vs/ydfgv/SdKp/i7Plgv17tY1ax/h
QArmd6CLcqLUOJtAywO9LNpRMU4StUgOlNZtXWZj+re4m+fxVcG/Z3lp/xhn
80U0Lun3/GocT4rybhabV3MAA7dL0lmSxkpFAJssp87h/xqeFwf6+45+Q4um
RwyL76PUf5jlML3DHztnJ4f0dwFTiGH6p8ksLrKb4l2ku93+3uNdejtOyrsD
/SqPriP+O5tAl93+tt7elgfLtMzvsEv6O55HyexA/xylHQb/n9Nk3Bl/COc5
7OjvstlkFOdTb6bD6yjP0vANTfdZVpTw4nWa3MR5AVMKZt7tdvXhcj4HwGOr
YdnSp4fDbt9fAfdAD/J4mmQpLHjgrejRdq/X3X0ULun1cOCvaUrz+vO46IyW
nXiyDJd01NGvokU0yRbZcpYV3rKOknlS5klW1BvQ6tyyELdPo/xuFqWTYIn7
vV4fvk7SUj/Lo3R8rY9yb3WH2WwWT2Nokb8L13jkr7G3/WRne/0aJ8mC5vjn
5XxSXyNs24vlL8s42LPlHIDuHtOShhEg01WWj+NgGb3d3W39NiqKONeXce4v
4QXQ06SyQ28G4ey7T7rrZ19c4zT+PMW/OkA1tR067OiX0W1OrMPboOgmmejD
8BWtY/Augr5gruPrNJtl0yQuQtSD9TzLs2hyG919ArZt97o7vXZ3e3dn7XJK
gOKfI5oCrUalWT6PSsAWJHtgEt3t/s6Btr/vmt973e5T93t/z/2+37W/97f3
ze872/2+9/uO97vtc2dvx7bf7XZ33O+7ts1ez327t7dtnz954r7d397fpt9P
2kcdJqn2TX6FK3p+8mrY7u7vtfsHBAaRCUfJNAFQ6GEyTaNymcdA4kAgUT7R
m0fD4Ra1dezQbt4ZgCpL4cOTtICulmWsASXtx4WGf93W8v4ZEbH9tL29x1sd
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
Qh/VFxYm62JjqiFo+QBHVnMI7d8rcbpP+v3eb5Q4/98L9mleMB932NRbZeg9
xAfWFD7/BJb7S3//4u3bV9ej4vFNmVxXVAe92sqrjOsU93scYUqvswnvtQir
y1UP4q/wy95451OcYRzh8pX0+/v4Yux13j95sluW47e3bw5xRwZNaBTSJiHS
f4jMXuMl+LLSu7VCfNdEt4CldlvQf6Yg/zdKcn1IhaX0y2xqLhzN8FI0fTxJ
yiw/4OT9xnPv2ajIZjFXhzZ3m+BNgvZONs6d4c+pduEkeW/upOKKJnKShPgm
3sSGSYYAXw3ratukzUrxOjuRYjmaJ6Xk482jhIpy4TXgXIQJ8zmxmysY1IYA
63UrsR5rRIV+fBqiM5/Qg3mXpLDhnAaXLUv63SWoujIn3unrb/2C3rQw2I42
3c+y+vii8UVz+560r5zk5Osc3lw859te5gBrULFMaU9bWgUvZC+gG3v7Qzxf
JDlRC9YI5CH6MMQpJuHD+xVluN/YM2nevPFqzDUz34FuEYH0RcRHh+MW5q8L
fN7ylaNUWrvxtCV0YVOx+NbPCBsBn6JOgwuh3B10dESdEcgDfVgtH1OILxgt
L4aDNsOGXuOYwbF/bHgLw8br9gvTOr9dcfjbLKGj/g8k7Qw9ZdUAAA==

-->

</rfc>

